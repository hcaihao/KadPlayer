/* soapKadServiceSoapProxy.cpp
   Generated by gSOAP 2.8.17r from service.h

Copyright(C) 2000-2013, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#include "soapKadServiceSoapProxy.h"

KadServiceSoapProxy::KadServiceSoapProxy()
{	KadServiceSoapProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

KadServiceSoapProxy::KadServiceSoapProxy(const struct soap &_soap) : soap(_soap)
{ }

KadServiceSoapProxy::KadServiceSoapProxy(const char *url)
{	KadServiceSoapProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
	soap_endpoint = url;
}

KadServiceSoapProxy::KadServiceSoapProxy(soap_mode iomode)
{	KadServiceSoapProxy_init(iomode, iomode);
}

KadServiceSoapProxy::KadServiceSoapProxy(const char *url, soap_mode iomode)
{	KadServiceSoapProxy_init(iomode, iomode);
	soap_endpoint = url;
}

KadServiceSoapProxy::KadServiceSoapProxy(soap_mode imode, soap_mode omode)
{	KadServiceSoapProxy_init(imode, omode);
}

KadServiceSoapProxy::~KadServiceSoapProxy()
{ }

void KadServiceSoapProxy::KadServiceSoapProxy_init(soap_mode imode, soap_mode omode)
{	soap_imode(this, imode);
	soap_omode(this, omode);
	soap_endpoint = NULL;
	static const struct Namespace namespaces[] =
{
	{"SOAP-ENV", "http://www.w3.org/2003/05/soap-envelope", "http://schemas.xmlsoap.org/soap/envelope/", NULL},
	{"SOAP-ENC", "http://www.w3.org/2003/05/soap-encoding", "http://schemas.xmlsoap.org/soap/encoding/", NULL},
	{"xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL},
	{"xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL},
	{"ns1", "http://tempuri.org/", NULL, NULL},
	{NULL, NULL, NULL, NULL}
};
	soap_set_namespaces(this, namespaces);
}

void KadServiceSoapProxy::destroy()
{	soap_destroy(this);
	soap_end(this);
}

void KadServiceSoapProxy::reset()
{	destroy();
	soap_done(this);
	soap_initialize(this);
	KadServiceSoapProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

void KadServiceSoapProxy::soap_noheader()
{	this->header = NULL;
}

const SOAP_ENV__Header *KadServiceSoapProxy::soap_header()
{	return this->header;
}

const SOAP_ENV__Fault *KadServiceSoapProxy::soap_fault()
{	return this->fault;
}

const char *KadServiceSoapProxy::soap_fault_string()
{	return *soap_faultstring(this);
}

const char *KadServiceSoapProxy::soap_fault_detail()
{	return *soap_faultdetail(this);
}

int KadServiceSoapProxy::soap_close_socket()
{	return soap_closesock(this);
}

int KadServiceSoapProxy::soap_force_close_socket()
{	return soap_force_closesock(this);
}

void KadServiceSoapProxy::soap_print_fault(FILE *fd)
{	::soap_print_fault(this, fd);
}

#ifndef WITH_LEAN
#ifndef WITH_COMPAT
void KadServiceSoapProxy::soap_stream_fault(std::ostream& os)
{	::soap_stream_fault(this, os);
}
#endif

char *KadServiceSoapProxy::soap_sprint_fault(char *buf, size_t len)
{	return ::soap_sprint_fault(this, buf, len);
}
#endif

int KadServiceSoapProxy::GetSystemNotify(const char *endpoint, const char *soap_action, _ns1__GetSystemNotify *ns1__GetSystemNotify, _ns1__GetSystemNotifyResponse *ns1__GetSystemNotifyResponse)
{	struct soap *soap = this;
	struct __ns1__GetSystemNotify soap_tmp___ns1__GetSystemNotify;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://kadplayer.com:81/kadservice.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/GetSystemNotify";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetSystemNotify.ns1__GetSystemNotify = ns1__GetSystemNotify;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetSystemNotify(soap, &soap_tmp___ns1__GetSystemNotify);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetSystemNotify(soap, &soap_tmp___ns1__GetSystemNotify, "-ns1:GetSystemNotify", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetSystemNotify(soap, &soap_tmp___ns1__GetSystemNotify, "-ns1:GetSystemNotify", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__GetSystemNotifyResponse)
		return soap_closesock(soap);
	ns1__GetSystemNotifyResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetSystemNotifyResponse->soap_get(soap, "ns1:GetSystemNotifyResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int KadServiceSoapProxy::GetSystemMessage(const char *endpoint, const char *soap_action, _ns1__GetSystemMessage *ns1__GetSystemMessage, _ns1__GetSystemMessageResponse *ns1__GetSystemMessageResponse)
{	struct soap *soap = this;
	struct __ns1__GetSystemMessage soap_tmp___ns1__GetSystemMessage;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://kadplayer.com:81/kadservice.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/GetSystemMessage";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetSystemMessage.ns1__GetSystemMessage = ns1__GetSystemMessage;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetSystemMessage(soap, &soap_tmp___ns1__GetSystemMessage);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetSystemMessage(soap, &soap_tmp___ns1__GetSystemMessage, "-ns1:GetSystemMessage", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetSystemMessage(soap, &soap_tmp___ns1__GetSystemMessage, "-ns1:GetSystemMessage", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__GetSystemMessageResponse)
		return soap_closesock(soap);
	ns1__GetSystemMessageResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetSystemMessageResponse->soap_get(soap, "ns1:GetSystemMessageResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int KadServiceSoapProxy::GetUserSetting(const char *endpoint, const char *soap_action, _ns1__GetUserSetting *ns1__GetUserSetting, _ns1__GetUserSettingResponse *ns1__GetUserSettingResponse)
{	struct soap *soap = this;
	struct __ns1__GetUserSetting soap_tmp___ns1__GetUserSetting;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://kadplayer.com:81/kadservice.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/GetUserSetting";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetUserSetting.ns1__GetUserSetting = ns1__GetUserSetting;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetUserSetting(soap, &soap_tmp___ns1__GetUserSetting);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetUserSetting(soap, &soap_tmp___ns1__GetUserSetting, "-ns1:GetUserSetting", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetUserSetting(soap, &soap_tmp___ns1__GetUserSetting, "-ns1:GetUserSetting", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__GetUserSettingResponse)
		return soap_closesock(soap);
	ns1__GetUserSettingResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetUserSettingResponse->soap_get(soap, "ns1:GetUserSettingResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int KadServiceSoapProxy::GetSensitiveWords(const char *endpoint, const char *soap_action, _ns1__GetSensitiveWords *ns1__GetSensitiveWords, _ns1__GetSensitiveWordsResponse *ns1__GetSensitiveWordsResponse)
{	struct soap *soap = this;
	struct __ns1__GetSensitiveWords soap_tmp___ns1__GetSensitiveWords;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://kadplayer.com:81/kadservice.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/GetSensitiveWords";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetSensitiveWords.ns1__GetSensitiveWords = ns1__GetSensitiveWords;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetSensitiveWords(soap, &soap_tmp___ns1__GetSensitiveWords);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetSensitiveWords(soap, &soap_tmp___ns1__GetSensitiveWords, "-ns1:GetSensitiveWords", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetSensitiveWords(soap, &soap_tmp___ns1__GetSensitiveWords, "-ns1:GetSensitiveWords", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__GetSensitiveWordsResponse)
		return soap_closesock(soap);
	ns1__GetSensitiveWordsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetSensitiveWordsResponse->soap_get(soap, "ns1:GetSensitiveWordsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int KadServiceSoapProxy::GetHotWords(const char *endpoint, const char *soap_action, _ns1__GetHotWords *ns1__GetHotWords, _ns1__GetHotWordsResponse *ns1__GetHotWordsResponse)
{	struct soap *soap = this;
	struct __ns1__GetHotWords soap_tmp___ns1__GetHotWords;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://kadplayer.com:81/kadservice.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/GetHotWords";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetHotWords.ns1__GetHotWords = ns1__GetHotWords;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetHotWords(soap, &soap_tmp___ns1__GetHotWords);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetHotWords(soap, &soap_tmp___ns1__GetHotWords, "-ns1:GetHotWords", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetHotWords(soap, &soap_tmp___ns1__GetHotWords, "-ns1:GetHotWords", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__GetHotWordsResponse)
		return soap_closesock(soap);
	ns1__GetHotWordsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetHotWordsResponse->soap_get(soap, "ns1:GetHotWordsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int KadServiceSoapProxy::GetHotEd2ks(const char *endpoint, const char *soap_action, _ns1__GetHotEd2ks *ns1__GetHotEd2ks, _ns1__GetHotEd2ksResponse *ns1__GetHotEd2ksResponse)
{	struct soap *soap = this;
	struct __ns1__GetHotEd2ks soap_tmp___ns1__GetHotEd2ks;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://kadplayer.com:81/kadservice.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/GetHotEd2ks";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetHotEd2ks.ns1__GetHotEd2ks = ns1__GetHotEd2ks;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetHotEd2ks(soap, &soap_tmp___ns1__GetHotEd2ks);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetHotEd2ks(soap, &soap_tmp___ns1__GetHotEd2ks, "-ns1:GetHotEd2ks", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetHotEd2ks(soap, &soap_tmp___ns1__GetHotEd2ks, "-ns1:GetHotEd2ks", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__GetHotEd2ksResponse)
		return soap_closesock(soap);
	ns1__GetHotEd2ksResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetHotEd2ksResponse->soap_get(soap, "ns1:GetHotEd2ksResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int KadServiceSoapProxy::GetRandomWord(const char *endpoint, const char *soap_action, _ns1__GetRandomWord *ns1__GetRandomWord, _ns1__GetRandomWordResponse *ns1__GetRandomWordResponse)
{	struct soap *soap = this;
	struct __ns1__GetRandomWord soap_tmp___ns1__GetRandomWord;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://kadplayer.com:81/kadservice.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/GetRandomWord";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetRandomWord.ns1__GetRandomWord = ns1__GetRandomWord;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetRandomWord(soap, &soap_tmp___ns1__GetRandomWord);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetRandomWord(soap, &soap_tmp___ns1__GetRandomWord, "-ns1:GetRandomWord", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetRandomWord(soap, &soap_tmp___ns1__GetRandomWord, "-ns1:GetRandomWord", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__GetRandomWordResponse)
		return soap_closesock(soap);
	ns1__GetRandomWordResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetRandomWordResponse->soap_get(soap, "ns1:GetRandomWordResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int KadServiceSoapProxy::SetSearchLog(const char *endpoint, const char *soap_action, _ns1__SetSearchLog *ns1__SetSearchLog, _ns1__SetSearchLogResponse *ns1__SetSearchLogResponse)
{	struct soap *soap = this;
	struct __ns1__SetSearchLog soap_tmp___ns1__SetSearchLog;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://kadplayer.com:81/kadservice.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/SetSearchLog";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__SetSearchLog.ns1__SetSearchLog = ns1__SetSearchLog;
	soap_serializeheader(soap);
	soap_serialize___ns1__SetSearchLog(soap, &soap_tmp___ns1__SetSearchLog);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__SetSearchLog(soap, &soap_tmp___ns1__SetSearchLog, "-ns1:SetSearchLog", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__SetSearchLog(soap, &soap_tmp___ns1__SetSearchLog, "-ns1:SetSearchLog", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__SetSearchLogResponse)
		return soap_closesock(soap);
	ns1__SetSearchLogResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SetSearchLogResponse->soap_get(soap, "ns1:SetSearchLogResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int KadServiceSoapProxy::SetFeedback(const char *endpoint, const char *soap_action, _ns1__SetFeedback *ns1__SetFeedback, _ns1__SetFeedbackResponse *ns1__SetFeedbackResponse)
{	struct soap *soap = this;
	struct __ns1__SetFeedback soap_tmp___ns1__SetFeedback;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://kadplayer.com:81/kadservice.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/SetFeedback";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__SetFeedback.ns1__SetFeedback = ns1__SetFeedback;
	soap_serializeheader(soap);
	soap_serialize___ns1__SetFeedback(soap, &soap_tmp___ns1__SetFeedback);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__SetFeedback(soap, &soap_tmp___ns1__SetFeedback, "-ns1:SetFeedback", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__SetFeedback(soap, &soap_tmp___ns1__SetFeedback, "-ns1:SetFeedback", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__SetFeedbackResponse)
		return soap_closesock(soap);
	ns1__SetFeedbackResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SetFeedbackResponse->soap_get(soap, "ns1:SetFeedbackResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int KadServiceSoapProxy::SetPlayLog(const char *endpoint, const char *soap_action, _ns1__SetPlayLog *ns1__SetPlayLog, _ns1__SetPlayLogResponse *ns1__SetPlayLogResponse)
{	struct soap *soap = this;
	struct __ns1__SetPlayLog soap_tmp___ns1__SetPlayLog;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://kadplayer.com:81/kadservice.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/SetPlayLog";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__SetPlayLog.ns1__SetPlayLog = ns1__SetPlayLog;
	soap_serializeheader(soap);
	soap_serialize___ns1__SetPlayLog(soap, &soap_tmp___ns1__SetPlayLog);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__SetPlayLog(soap, &soap_tmp___ns1__SetPlayLog, "-ns1:SetPlayLog", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__SetPlayLog(soap, &soap_tmp___ns1__SetPlayLog, "-ns1:SetPlayLog", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__SetPlayLogResponse)
		return soap_closesock(soap);
	ns1__SetPlayLogResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SetPlayLogResponse->soap_get(soap, "ns1:SetPlayLogResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int KadServiceSoapProxy::GetSystemNotify_(const char *endpoint, const char *soap_action, _ns1__GetSystemNotify *ns1__GetSystemNotify, _ns1__GetSystemNotifyResponse *ns1__GetSystemNotifyResponse)
{	struct soap *soap = this;
	struct __ns1__GetSystemNotify_ soap_tmp___ns1__GetSystemNotify_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://kadplayer.com:81/kadservice.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/GetSystemNotify";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetSystemNotify_.ns1__GetSystemNotify = ns1__GetSystemNotify;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetSystemNotify_(soap, &soap_tmp___ns1__GetSystemNotify_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetSystemNotify_(soap, &soap_tmp___ns1__GetSystemNotify_, "-ns1:GetSystemNotify", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetSystemNotify_(soap, &soap_tmp___ns1__GetSystemNotify_, "-ns1:GetSystemNotify", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__GetSystemNotifyResponse)
		return soap_closesock(soap);
	ns1__GetSystemNotifyResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetSystemNotifyResponse->soap_get(soap, "ns1:GetSystemNotifyResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int KadServiceSoapProxy::GetSystemMessage_(const char *endpoint, const char *soap_action, _ns1__GetSystemMessage *ns1__GetSystemMessage, _ns1__GetSystemMessageResponse *ns1__GetSystemMessageResponse)
{	struct soap *soap = this;
	struct __ns1__GetSystemMessage_ soap_tmp___ns1__GetSystemMessage_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://kadplayer.com:81/kadservice.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/GetSystemMessage";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetSystemMessage_.ns1__GetSystemMessage = ns1__GetSystemMessage;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetSystemMessage_(soap, &soap_tmp___ns1__GetSystemMessage_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetSystemMessage_(soap, &soap_tmp___ns1__GetSystemMessage_, "-ns1:GetSystemMessage", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetSystemMessage_(soap, &soap_tmp___ns1__GetSystemMessage_, "-ns1:GetSystemMessage", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__GetSystemMessageResponse)
		return soap_closesock(soap);
	ns1__GetSystemMessageResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetSystemMessageResponse->soap_get(soap, "ns1:GetSystemMessageResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int KadServiceSoapProxy::GetUserSetting_(const char *endpoint, const char *soap_action, _ns1__GetUserSetting *ns1__GetUserSetting, _ns1__GetUserSettingResponse *ns1__GetUserSettingResponse)
{	struct soap *soap = this;
	struct __ns1__GetUserSetting_ soap_tmp___ns1__GetUserSetting_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://kadplayer.com:81/kadservice.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/GetUserSetting";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetUserSetting_.ns1__GetUserSetting = ns1__GetUserSetting;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetUserSetting_(soap, &soap_tmp___ns1__GetUserSetting_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetUserSetting_(soap, &soap_tmp___ns1__GetUserSetting_, "-ns1:GetUserSetting", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetUserSetting_(soap, &soap_tmp___ns1__GetUserSetting_, "-ns1:GetUserSetting", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__GetUserSettingResponse)
		return soap_closesock(soap);
	ns1__GetUserSettingResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetUserSettingResponse->soap_get(soap, "ns1:GetUserSettingResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int KadServiceSoapProxy::GetSensitiveWords_(const char *endpoint, const char *soap_action, _ns1__GetSensitiveWords *ns1__GetSensitiveWords, _ns1__GetSensitiveWordsResponse *ns1__GetSensitiveWordsResponse)
{	struct soap *soap = this;
	struct __ns1__GetSensitiveWords_ soap_tmp___ns1__GetSensitiveWords_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://kadplayer.com:81/kadservice.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/GetSensitiveWords";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetSensitiveWords_.ns1__GetSensitiveWords = ns1__GetSensitiveWords;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetSensitiveWords_(soap, &soap_tmp___ns1__GetSensitiveWords_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetSensitiveWords_(soap, &soap_tmp___ns1__GetSensitiveWords_, "-ns1:GetSensitiveWords", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetSensitiveWords_(soap, &soap_tmp___ns1__GetSensitiveWords_, "-ns1:GetSensitiveWords", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__GetSensitiveWordsResponse)
		return soap_closesock(soap);
	ns1__GetSensitiveWordsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetSensitiveWordsResponse->soap_get(soap, "ns1:GetSensitiveWordsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int KadServiceSoapProxy::GetHotWords_(const char *endpoint, const char *soap_action, _ns1__GetHotWords *ns1__GetHotWords, _ns1__GetHotWordsResponse *ns1__GetHotWordsResponse)
{	struct soap *soap = this;
	struct __ns1__GetHotWords_ soap_tmp___ns1__GetHotWords_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://kadplayer.com:81/kadservice.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/GetHotWords";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetHotWords_.ns1__GetHotWords = ns1__GetHotWords;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetHotWords_(soap, &soap_tmp___ns1__GetHotWords_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetHotWords_(soap, &soap_tmp___ns1__GetHotWords_, "-ns1:GetHotWords", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetHotWords_(soap, &soap_tmp___ns1__GetHotWords_, "-ns1:GetHotWords", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__GetHotWordsResponse)
		return soap_closesock(soap);
	ns1__GetHotWordsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetHotWordsResponse->soap_get(soap, "ns1:GetHotWordsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int KadServiceSoapProxy::GetHotEd2ks_(const char *endpoint, const char *soap_action, _ns1__GetHotEd2ks *ns1__GetHotEd2ks, _ns1__GetHotEd2ksResponse *ns1__GetHotEd2ksResponse)
{	struct soap *soap = this;
	struct __ns1__GetHotEd2ks_ soap_tmp___ns1__GetHotEd2ks_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://kadplayer.com:81/kadservice.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/GetHotEd2ks";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetHotEd2ks_.ns1__GetHotEd2ks = ns1__GetHotEd2ks;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetHotEd2ks_(soap, &soap_tmp___ns1__GetHotEd2ks_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetHotEd2ks_(soap, &soap_tmp___ns1__GetHotEd2ks_, "-ns1:GetHotEd2ks", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetHotEd2ks_(soap, &soap_tmp___ns1__GetHotEd2ks_, "-ns1:GetHotEd2ks", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__GetHotEd2ksResponse)
		return soap_closesock(soap);
	ns1__GetHotEd2ksResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetHotEd2ksResponse->soap_get(soap, "ns1:GetHotEd2ksResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int KadServiceSoapProxy::GetRandomWord_(const char *endpoint, const char *soap_action, _ns1__GetRandomWord *ns1__GetRandomWord, _ns1__GetRandomWordResponse *ns1__GetRandomWordResponse)
{	struct soap *soap = this;
	struct __ns1__GetRandomWord_ soap_tmp___ns1__GetRandomWord_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://kadplayer.com:81/kadservice.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/GetRandomWord";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetRandomWord_.ns1__GetRandomWord = ns1__GetRandomWord;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetRandomWord_(soap, &soap_tmp___ns1__GetRandomWord_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetRandomWord_(soap, &soap_tmp___ns1__GetRandomWord_, "-ns1:GetRandomWord", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetRandomWord_(soap, &soap_tmp___ns1__GetRandomWord_, "-ns1:GetRandomWord", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__GetRandomWordResponse)
		return soap_closesock(soap);
	ns1__GetRandomWordResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetRandomWordResponse->soap_get(soap, "ns1:GetRandomWordResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int KadServiceSoapProxy::SetSearchLog_(const char *endpoint, const char *soap_action, _ns1__SetSearchLog *ns1__SetSearchLog, _ns1__SetSearchLogResponse *ns1__SetSearchLogResponse)
{	struct soap *soap = this;
	struct __ns1__SetSearchLog_ soap_tmp___ns1__SetSearchLog_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://kadplayer.com:81/kadservice.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/SetSearchLog";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__SetSearchLog_.ns1__SetSearchLog = ns1__SetSearchLog;
	soap_serializeheader(soap);
	soap_serialize___ns1__SetSearchLog_(soap, &soap_tmp___ns1__SetSearchLog_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__SetSearchLog_(soap, &soap_tmp___ns1__SetSearchLog_, "-ns1:SetSearchLog", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__SetSearchLog_(soap, &soap_tmp___ns1__SetSearchLog_, "-ns1:SetSearchLog", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__SetSearchLogResponse)
		return soap_closesock(soap);
	ns1__SetSearchLogResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SetSearchLogResponse->soap_get(soap, "ns1:SetSearchLogResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int KadServiceSoapProxy::SetFeedback_(const char *endpoint, const char *soap_action, _ns1__SetFeedback *ns1__SetFeedback, _ns1__SetFeedbackResponse *ns1__SetFeedbackResponse)
{	struct soap *soap = this;
	struct __ns1__SetFeedback_ soap_tmp___ns1__SetFeedback_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://kadplayer.com:81/kadservice.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/SetFeedback";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__SetFeedback_.ns1__SetFeedback = ns1__SetFeedback;
	soap_serializeheader(soap);
	soap_serialize___ns1__SetFeedback_(soap, &soap_tmp___ns1__SetFeedback_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__SetFeedback_(soap, &soap_tmp___ns1__SetFeedback_, "-ns1:SetFeedback", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__SetFeedback_(soap, &soap_tmp___ns1__SetFeedback_, "-ns1:SetFeedback", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__SetFeedbackResponse)
		return soap_closesock(soap);
	ns1__SetFeedbackResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SetFeedbackResponse->soap_get(soap, "ns1:SetFeedbackResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int KadServiceSoapProxy::SetPlayLog_(const char *endpoint, const char *soap_action, _ns1__SetPlayLog *ns1__SetPlayLog, _ns1__SetPlayLogResponse *ns1__SetPlayLogResponse)
{	struct soap *soap = this;
	struct __ns1__SetPlayLog_ soap_tmp___ns1__SetPlayLog_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://kadplayer.com:81/kadservice.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/SetPlayLog";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__SetPlayLog_.ns1__SetPlayLog = ns1__SetPlayLog;
	soap_serializeheader(soap);
	soap_serialize___ns1__SetPlayLog_(soap, &soap_tmp___ns1__SetPlayLog_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__SetPlayLog_(soap, &soap_tmp___ns1__SetPlayLog_, "-ns1:SetPlayLog", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__SetPlayLog_(soap, &soap_tmp___ns1__SetPlayLog_, "-ns1:SetPlayLog", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__SetPlayLogResponse)
		return soap_closesock(soap);
	ns1__SetPlayLogResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SetPlayLogResponse->soap_get(soap, "ns1:SetPlayLogResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
/* End of client proxy code */
