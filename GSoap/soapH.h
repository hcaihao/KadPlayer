/* soapH.h
   Generated by gSOAP 2.8.17r from service.h

Copyright(C) 2000-2013, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#ifndef soapH_H
#define soapH_H
#include "soapStub.h"
#ifndef WITH_NOIDREF

#ifdef __cplusplus
extern "C" {
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_markelement(struct soap*, const void*, int);

#ifdef __cplusplus
}
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_putindependent(struct soap*);
SOAP_FMAC3 int SOAP_FMAC4 soap_getindependent(struct soap*);
#endif

#ifdef __cplusplus
extern "C" {
#endif
SOAP_FMAC3 void *SOAP_FMAC4 soap_getelement(struct soap*, int*);
SOAP_FMAC3 int SOAP_FMAC4 soap_putelement(struct soap*, const void*, const char*, int, int);

#ifdef __cplusplus
}
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_ignore_element(struct soap*);

SOAP_FMAC3 const char ** SOAP_FMAC4 soap_faultcode(struct soap *soap);

SOAP_FMAC3 void * SOAP_FMAC4 soap_instantiate(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 int SOAP_FMAC4 soap_fdelete(struct soap_clist*);
SOAP_FMAC3 void* SOAP_FMAC4 soap_class_id_enter(struct soap*, const char*, void*, int, size_t, const char*, const char*);

SOAP_FMAC3 void* SOAP_FMAC4 soap_container_id_forward(struct soap*, const char*, void*, size_t, int, int, size_t, unsigned int);

SOAP_FMAC3 void SOAP_FMAC4 soap_container_insert(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_byte
#define SOAP_TYPE_byte (3)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_byte(struct soap*, char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_byte(struct soap*, const char*, int, const char *, const char*);
SOAP_FMAC3 char * SOAP_FMAC4 soap_in_byte(struct soap*, const char*, char *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_byte(struct soap*, const char *, const char*, const char*);

#ifndef soap_write_byte
#define soap_write_byte(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_byte(soap, data),0) || soap_put_byte(soap, data, "byte", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char * SOAP_FMAC4 soap_get_byte(struct soap*, char *, const char*, const char*);

#ifndef soap_read_byte
#define soap_read_byte(soap, data) ( soap_begin_recv(soap) || !soap_get_byte(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_int
#define SOAP_TYPE_int (1)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_int(struct soap*, int *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_int(struct soap*, const char*, int, const int *, const char*);
SOAP_FMAC3 int * SOAP_FMAC4 soap_in_int(struct soap*, const char*, int *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_int(struct soap*, const int *, const char*, const char*);

#ifndef soap_write_int
#define soap_write_int(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_int(soap, data),0) || soap_put_int(soap, data, "int", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 int * SOAP_FMAC4 soap_get_int(struct soap*, int *, const char*, const char*);

#ifndef soap_read_int
#define soap_read_int(soap, data) ( soap_begin_recv(soap) || !soap_get_int(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_std__string
#define SOAP_TYPE_std__string (30)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__string(struct soap*, std::string *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__string(struct soap*, const std::string *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__string(struct soap*, const char*, int, const std::string*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_std__string(struct soap*, const char*, std::string*, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_std__string(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_write_std__string
#define soap_write_std__string(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_std__string(soap, data),0) || soap_put_std__string(soap, data, "string", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_std__string(struct soap*, std::string *, const char*, const char*);

#ifndef soap_read_std__string
#define soap_read_std__string(soap, data) ( soap_begin_recv(soap) || !soap_get_std__string(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 std::string * SOAP_FMAC2 soap_instantiate_std__string(struct soap*, int, const char*, const char*, size_t*);

inline std::string * soap_new_std__string(struct soap *soap, int n = -1) { return soap_instantiate_std__string(soap, n, NULL, NULL, NULL); }

inline std::string * soap_new_req_std__string(struct soap *soap) { std::string *_p = soap_instantiate_std__string(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_std__string(soap, _p); } return _p; }

inline std::string * soap_new_set_std__string(struct soap *soap) { std::string *_p = soap_instantiate_std__string(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_std__string(soap, _p); } return _p; }

inline void soap_delete_std__string(struct soap *soap, std::string *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__string(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__SetPlayLogResponse
#define SOAP_TYPE__ns1__SetPlayLogResponse (28)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__SetPlayLogResponse(struct soap*, const char*, int, const _ns1__SetPlayLogResponse *, const char*);
SOAP_FMAC3 _ns1__SetPlayLogResponse * SOAP_FMAC4 soap_in__ns1__SetPlayLogResponse(struct soap*, const char*, _ns1__SetPlayLogResponse *, const char*);

#ifndef soap_write__ns1__SetPlayLogResponse
#define soap_write__ns1__SetPlayLogResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:SetPlayLogResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__SetPlayLogResponse * SOAP_FMAC4 soap_get__ns1__SetPlayLogResponse(struct soap*, _ns1__SetPlayLogResponse *, const char*, const char*);

#ifndef soap_read__ns1__SetPlayLogResponse
#define soap_read__ns1__SetPlayLogResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__SetPlayLogResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__SetPlayLogResponse * SOAP_FMAC2 soap_instantiate__ns1__SetPlayLogResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__SetPlayLogResponse * soap_new__ns1__SetPlayLogResponse(struct soap *soap, int n = -1) { return soap_instantiate__ns1__SetPlayLogResponse(soap, n, NULL, NULL, NULL); }

inline _ns1__SetPlayLogResponse * soap_new_req__ns1__SetPlayLogResponse(struct soap *soap) { _ns1__SetPlayLogResponse *_p = soap_instantiate__ns1__SetPlayLogResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__SetPlayLogResponse * soap_new_set__ns1__SetPlayLogResponse(struct soap *soap) { _ns1__SetPlayLogResponse *_p = soap_instantiate__ns1__SetPlayLogResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete__ns1__SetPlayLogResponse(struct soap *soap, _ns1__SetPlayLogResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__SetPlayLogResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__SetPlayLog
#define SOAP_TYPE__ns1__SetPlayLog (27)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__SetPlayLog(struct soap*, const char*, int, const _ns1__SetPlayLog *, const char*);
SOAP_FMAC3 _ns1__SetPlayLog * SOAP_FMAC4 soap_in__ns1__SetPlayLog(struct soap*, const char*, _ns1__SetPlayLog *, const char*);

#ifndef soap_write__ns1__SetPlayLog
#define soap_write__ns1__SetPlayLog(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:SetPlayLog", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__SetPlayLog * SOAP_FMAC4 soap_get__ns1__SetPlayLog(struct soap*, _ns1__SetPlayLog *, const char*, const char*);

#ifndef soap_read__ns1__SetPlayLog
#define soap_read__ns1__SetPlayLog(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__SetPlayLog(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__SetPlayLog * SOAP_FMAC2 soap_instantiate__ns1__SetPlayLog(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__SetPlayLog * soap_new__ns1__SetPlayLog(struct soap *soap, int n = -1) { return soap_instantiate__ns1__SetPlayLog(soap, n, NULL, NULL, NULL); }

inline _ns1__SetPlayLog * soap_new_req__ns1__SetPlayLog(struct soap *soap) { _ns1__SetPlayLog *_p = soap_instantiate__ns1__SetPlayLog(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__SetPlayLog * soap_new_set__ns1__SetPlayLog(struct soap *soap, std::string *mac, std::string *links) { _ns1__SetPlayLog *_p = soap_instantiate__ns1__SetPlayLog(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__SetPlayLog::mac = mac; _p->_ns1__SetPlayLog::links = links; } return _p; }

inline void soap_delete__ns1__SetPlayLog(struct soap *soap, _ns1__SetPlayLog *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__SetPlayLog(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__SetFeedbackResponse
#define SOAP_TYPE__ns1__SetFeedbackResponse (26)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__SetFeedbackResponse(struct soap*, const char*, int, const _ns1__SetFeedbackResponse *, const char*);
SOAP_FMAC3 _ns1__SetFeedbackResponse * SOAP_FMAC4 soap_in__ns1__SetFeedbackResponse(struct soap*, const char*, _ns1__SetFeedbackResponse *, const char*);

#ifndef soap_write__ns1__SetFeedbackResponse
#define soap_write__ns1__SetFeedbackResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:SetFeedbackResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__SetFeedbackResponse * SOAP_FMAC4 soap_get__ns1__SetFeedbackResponse(struct soap*, _ns1__SetFeedbackResponse *, const char*, const char*);

#ifndef soap_read__ns1__SetFeedbackResponse
#define soap_read__ns1__SetFeedbackResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__SetFeedbackResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__SetFeedbackResponse * SOAP_FMAC2 soap_instantiate__ns1__SetFeedbackResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__SetFeedbackResponse * soap_new__ns1__SetFeedbackResponse(struct soap *soap, int n = -1) { return soap_instantiate__ns1__SetFeedbackResponse(soap, n, NULL, NULL, NULL); }

inline _ns1__SetFeedbackResponse * soap_new_req__ns1__SetFeedbackResponse(struct soap *soap) { _ns1__SetFeedbackResponse *_p = soap_instantiate__ns1__SetFeedbackResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__SetFeedbackResponse * soap_new_set__ns1__SetFeedbackResponse(struct soap *soap) { _ns1__SetFeedbackResponse *_p = soap_instantiate__ns1__SetFeedbackResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete__ns1__SetFeedbackResponse(struct soap *soap, _ns1__SetFeedbackResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__SetFeedbackResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__SetFeedback
#define SOAP_TYPE__ns1__SetFeedback (25)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__SetFeedback(struct soap*, const char*, int, const _ns1__SetFeedback *, const char*);
SOAP_FMAC3 _ns1__SetFeedback * SOAP_FMAC4 soap_in__ns1__SetFeedback(struct soap*, const char*, _ns1__SetFeedback *, const char*);

#ifndef soap_write__ns1__SetFeedback
#define soap_write__ns1__SetFeedback(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:SetFeedback", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__SetFeedback * SOAP_FMAC4 soap_get__ns1__SetFeedback(struct soap*, _ns1__SetFeedback *, const char*, const char*);

#ifndef soap_read__ns1__SetFeedback
#define soap_read__ns1__SetFeedback(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__SetFeedback(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__SetFeedback * SOAP_FMAC2 soap_instantiate__ns1__SetFeedback(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__SetFeedback * soap_new__ns1__SetFeedback(struct soap *soap, int n = -1) { return soap_instantiate__ns1__SetFeedback(soap, n, NULL, NULL, NULL); }

inline _ns1__SetFeedback * soap_new_req__ns1__SetFeedback(struct soap *soap, int type) { _ns1__SetFeedback *_p = soap_instantiate__ns1__SetFeedback(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__SetFeedback::type = type; } return _p; }

inline _ns1__SetFeedback * soap_new_set__ns1__SetFeedback(struct soap *soap, std::string *mac, std::string *version, int type, std::string *content) { _ns1__SetFeedback *_p = soap_instantiate__ns1__SetFeedback(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__SetFeedback::mac = mac; _p->_ns1__SetFeedback::version = version; _p->_ns1__SetFeedback::type = type; _p->_ns1__SetFeedback::content = content; } return _p; }

inline void soap_delete__ns1__SetFeedback(struct soap *soap, _ns1__SetFeedback *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__SetFeedback(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__SetSearchLogResponse
#define SOAP_TYPE__ns1__SetSearchLogResponse (24)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__SetSearchLogResponse(struct soap*, const char*, int, const _ns1__SetSearchLogResponse *, const char*);
SOAP_FMAC3 _ns1__SetSearchLogResponse * SOAP_FMAC4 soap_in__ns1__SetSearchLogResponse(struct soap*, const char*, _ns1__SetSearchLogResponse *, const char*);

#ifndef soap_write__ns1__SetSearchLogResponse
#define soap_write__ns1__SetSearchLogResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:SetSearchLogResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__SetSearchLogResponse * SOAP_FMAC4 soap_get__ns1__SetSearchLogResponse(struct soap*, _ns1__SetSearchLogResponse *, const char*, const char*);

#ifndef soap_read__ns1__SetSearchLogResponse
#define soap_read__ns1__SetSearchLogResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__SetSearchLogResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__SetSearchLogResponse * SOAP_FMAC2 soap_instantiate__ns1__SetSearchLogResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__SetSearchLogResponse * soap_new__ns1__SetSearchLogResponse(struct soap *soap, int n = -1) { return soap_instantiate__ns1__SetSearchLogResponse(soap, n, NULL, NULL, NULL); }

inline _ns1__SetSearchLogResponse * soap_new_req__ns1__SetSearchLogResponse(struct soap *soap) { _ns1__SetSearchLogResponse *_p = soap_instantiate__ns1__SetSearchLogResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__SetSearchLogResponse * soap_new_set__ns1__SetSearchLogResponse(struct soap *soap) { _ns1__SetSearchLogResponse *_p = soap_instantiate__ns1__SetSearchLogResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete__ns1__SetSearchLogResponse(struct soap *soap, _ns1__SetSearchLogResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__SetSearchLogResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__SetSearchLog
#define SOAP_TYPE__ns1__SetSearchLog (23)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__SetSearchLog(struct soap*, const char*, int, const _ns1__SetSearchLog *, const char*);
SOAP_FMAC3 _ns1__SetSearchLog * SOAP_FMAC4 soap_in__ns1__SetSearchLog(struct soap*, const char*, _ns1__SetSearchLog *, const char*);

#ifndef soap_write__ns1__SetSearchLog
#define soap_write__ns1__SetSearchLog(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:SetSearchLog", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__SetSearchLog * SOAP_FMAC4 soap_get__ns1__SetSearchLog(struct soap*, _ns1__SetSearchLog *, const char*, const char*);

#ifndef soap_read__ns1__SetSearchLog
#define soap_read__ns1__SetSearchLog(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__SetSearchLog(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__SetSearchLog * SOAP_FMAC2 soap_instantiate__ns1__SetSearchLog(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__SetSearchLog * soap_new__ns1__SetSearchLog(struct soap *soap, int n = -1) { return soap_instantiate__ns1__SetSearchLog(soap, n, NULL, NULL, NULL); }

inline _ns1__SetSearchLog * soap_new_req__ns1__SetSearchLog(struct soap *soap) { _ns1__SetSearchLog *_p = soap_instantiate__ns1__SetSearchLog(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__SetSearchLog * soap_new_set__ns1__SetSearchLog(struct soap *soap, std::string *mac, std::string *keys) { _ns1__SetSearchLog *_p = soap_instantiate__ns1__SetSearchLog(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__SetSearchLog::mac = mac; _p->_ns1__SetSearchLog::keys = keys; } return _p; }

inline void soap_delete__ns1__SetSearchLog(struct soap *soap, _ns1__SetSearchLog *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__SetSearchLog(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__GetRandomWordResponse
#define SOAP_TYPE__ns1__GetRandomWordResponse (22)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetRandomWordResponse(struct soap*, const char*, int, const _ns1__GetRandomWordResponse *, const char*);
SOAP_FMAC3 _ns1__GetRandomWordResponse * SOAP_FMAC4 soap_in__ns1__GetRandomWordResponse(struct soap*, const char*, _ns1__GetRandomWordResponse *, const char*);

#ifndef soap_write__ns1__GetRandomWordResponse
#define soap_write__ns1__GetRandomWordResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:GetRandomWordResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__GetRandomWordResponse * SOAP_FMAC4 soap_get__ns1__GetRandomWordResponse(struct soap*, _ns1__GetRandomWordResponse *, const char*, const char*);

#ifndef soap_read__ns1__GetRandomWordResponse
#define soap_read__ns1__GetRandomWordResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__GetRandomWordResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__GetRandomWordResponse * SOAP_FMAC2 soap_instantiate__ns1__GetRandomWordResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetRandomWordResponse * soap_new__ns1__GetRandomWordResponse(struct soap *soap, int n = -1) { return soap_instantiate__ns1__GetRandomWordResponse(soap, n, NULL, NULL, NULL); }

inline _ns1__GetRandomWordResponse * soap_new_req__ns1__GetRandomWordResponse(struct soap *soap) { _ns1__GetRandomWordResponse *_p = soap_instantiate__ns1__GetRandomWordResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__GetRandomWordResponse * soap_new_set__ns1__GetRandomWordResponse(struct soap *soap, std::string *GetRandomWordResult) { _ns1__GetRandomWordResponse *_p = soap_instantiate__ns1__GetRandomWordResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__GetRandomWordResponse::GetRandomWordResult = GetRandomWordResult; } return _p; }

inline void soap_delete__ns1__GetRandomWordResponse(struct soap *soap, _ns1__GetRandomWordResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__GetRandomWordResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__GetRandomWord
#define SOAP_TYPE__ns1__GetRandomWord (21)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetRandomWord(struct soap*, const char*, int, const _ns1__GetRandomWord *, const char*);
SOAP_FMAC3 _ns1__GetRandomWord * SOAP_FMAC4 soap_in__ns1__GetRandomWord(struct soap*, const char*, _ns1__GetRandomWord *, const char*);

#ifndef soap_write__ns1__GetRandomWord
#define soap_write__ns1__GetRandomWord(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:GetRandomWord", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__GetRandomWord * SOAP_FMAC4 soap_get__ns1__GetRandomWord(struct soap*, _ns1__GetRandomWord *, const char*, const char*);

#ifndef soap_read__ns1__GetRandomWord
#define soap_read__ns1__GetRandomWord(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__GetRandomWord(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__GetRandomWord * SOAP_FMAC2 soap_instantiate__ns1__GetRandomWord(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetRandomWord * soap_new__ns1__GetRandomWord(struct soap *soap, int n = -1) { return soap_instantiate__ns1__GetRandomWord(soap, n, NULL, NULL, NULL); }

inline _ns1__GetRandomWord * soap_new_req__ns1__GetRandomWord(struct soap *soap) { _ns1__GetRandomWord *_p = soap_instantiate__ns1__GetRandomWord(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__GetRandomWord * soap_new_set__ns1__GetRandomWord(struct soap *soap) { _ns1__GetRandomWord *_p = soap_instantiate__ns1__GetRandomWord(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete__ns1__GetRandomWord(struct soap *soap, _ns1__GetRandomWord *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__GetRandomWord(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__GetHotEd2ksResponse
#define SOAP_TYPE__ns1__GetHotEd2ksResponse (20)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetHotEd2ksResponse(struct soap*, const char*, int, const _ns1__GetHotEd2ksResponse *, const char*);
SOAP_FMAC3 _ns1__GetHotEd2ksResponse * SOAP_FMAC4 soap_in__ns1__GetHotEd2ksResponse(struct soap*, const char*, _ns1__GetHotEd2ksResponse *, const char*);

#ifndef soap_write__ns1__GetHotEd2ksResponse
#define soap_write__ns1__GetHotEd2ksResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:GetHotEd2ksResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__GetHotEd2ksResponse * SOAP_FMAC4 soap_get__ns1__GetHotEd2ksResponse(struct soap*, _ns1__GetHotEd2ksResponse *, const char*, const char*);

#ifndef soap_read__ns1__GetHotEd2ksResponse
#define soap_read__ns1__GetHotEd2ksResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__GetHotEd2ksResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__GetHotEd2ksResponse * SOAP_FMAC2 soap_instantiate__ns1__GetHotEd2ksResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetHotEd2ksResponse * soap_new__ns1__GetHotEd2ksResponse(struct soap *soap, int n = -1) { return soap_instantiate__ns1__GetHotEd2ksResponse(soap, n, NULL, NULL, NULL); }

inline _ns1__GetHotEd2ksResponse * soap_new_req__ns1__GetHotEd2ksResponse(struct soap *soap) { _ns1__GetHotEd2ksResponse *_p = soap_instantiate__ns1__GetHotEd2ksResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__GetHotEd2ksResponse * soap_new_set__ns1__GetHotEd2ksResponse(struct soap *soap, std::string *GetHotEd2ksResult) { _ns1__GetHotEd2ksResponse *_p = soap_instantiate__ns1__GetHotEd2ksResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__GetHotEd2ksResponse::GetHotEd2ksResult = GetHotEd2ksResult; } return _p; }

inline void soap_delete__ns1__GetHotEd2ksResponse(struct soap *soap, _ns1__GetHotEd2ksResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__GetHotEd2ksResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__GetHotEd2ks
#define SOAP_TYPE__ns1__GetHotEd2ks (19)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetHotEd2ks(struct soap*, const char*, int, const _ns1__GetHotEd2ks *, const char*);
SOAP_FMAC3 _ns1__GetHotEd2ks * SOAP_FMAC4 soap_in__ns1__GetHotEd2ks(struct soap*, const char*, _ns1__GetHotEd2ks *, const char*);

#ifndef soap_write__ns1__GetHotEd2ks
#define soap_write__ns1__GetHotEd2ks(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:GetHotEd2ks", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__GetHotEd2ks * SOAP_FMAC4 soap_get__ns1__GetHotEd2ks(struct soap*, _ns1__GetHotEd2ks *, const char*, const char*);

#ifndef soap_read__ns1__GetHotEd2ks
#define soap_read__ns1__GetHotEd2ks(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__GetHotEd2ks(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__GetHotEd2ks * SOAP_FMAC2 soap_instantiate__ns1__GetHotEd2ks(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetHotEd2ks * soap_new__ns1__GetHotEd2ks(struct soap *soap, int n = -1) { return soap_instantiate__ns1__GetHotEd2ks(soap, n, NULL, NULL, NULL); }

inline _ns1__GetHotEd2ks * soap_new_req__ns1__GetHotEd2ks(struct soap *soap) { _ns1__GetHotEd2ks *_p = soap_instantiate__ns1__GetHotEd2ks(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__GetHotEd2ks * soap_new_set__ns1__GetHotEd2ks(struct soap *soap) { _ns1__GetHotEd2ks *_p = soap_instantiate__ns1__GetHotEd2ks(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete__ns1__GetHotEd2ks(struct soap *soap, _ns1__GetHotEd2ks *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__GetHotEd2ks(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__GetHotWordsResponse
#define SOAP_TYPE__ns1__GetHotWordsResponse (18)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetHotWordsResponse(struct soap*, const char*, int, const _ns1__GetHotWordsResponse *, const char*);
SOAP_FMAC3 _ns1__GetHotWordsResponse * SOAP_FMAC4 soap_in__ns1__GetHotWordsResponse(struct soap*, const char*, _ns1__GetHotWordsResponse *, const char*);

#ifndef soap_write__ns1__GetHotWordsResponse
#define soap_write__ns1__GetHotWordsResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:GetHotWordsResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__GetHotWordsResponse * SOAP_FMAC4 soap_get__ns1__GetHotWordsResponse(struct soap*, _ns1__GetHotWordsResponse *, const char*, const char*);

#ifndef soap_read__ns1__GetHotWordsResponse
#define soap_read__ns1__GetHotWordsResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__GetHotWordsResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__GetHotWordsResponse * SOAP_FMAC2 soap_instantiate__ns1__GetHotWordsResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetHotWordsResponse * soap_new__ns1__GetHotWordsResponse(struct soap *soap, int n = -1) { return soap_instantiate__ns1__GetHotWordsResponse(soap, n, NULL, NULL, NULL); }

inline _ns1__GetHotWordsResponse * soap_new_req__ns1__GetHotWordsResponse(struct soap *soap) { _ns1__GetHotWordsResponse *_p = soap_instantiate__ns1__GetHotWordsResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__GetHotWordsResponse * soap_new_set__ns1__GetHotWordsResponse(struct soap *soap, std::string *GetHotWordsResult) { _ns1__GetHotWordsResponse *_p = soap_instantiate__ns1__GetHotWordsResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__GetHotWordsResponse::GetHotWordsResult = GetHotWordsResult; } return _p; }

inline void soap_delete__ns1__GetHotWordsResponse(struct soap *soap, _ns1__GetHotWordsResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__GetHotWordsResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__GetHotWords
#define SOAP_TYPE__ns1__GetHotWords (17)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetHotWords(struct soap*, const char*, int, const _ns1__GetHotWords *, const char*);
SOAP_FMAC3 _ns1__GetHotWords * SOAP_FMAC4 soap_in__ns1__GetHotWords(struct soap*, const char*, _ns1__GetHotWords *, const char*);

#ifndef soap_write__ns1__GetHotWords
#define soap_write__ns1__GetHotWords(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:GetHotWords", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__GetHotWords * SOAP_FMAC4 soap_get__ns1__GetHotWords(struct soap*, _ns1__GetHotWords *, const char*, const char*);

#ifndef soap_read__ns1__GetHotWords
#define soap_read__ns1__GetHotWords(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__GetHotWords(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__GetHotWords * SOAP_FMAC2 soap_instantiate__ns1__GetHotWords(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetHotWords * soap_new__ns1__GetHotWords(struct soap *soap, int n = -1) { return soap_instantiate__ns1__GetHotWords(soap, n, NULL, NULL, NULL); }

inline _ns1__GetHotWords * soap_new_req__ns1__GetHotWords(struct soap *soap) { _ns1__GetHotWords *_p = soap_instantiate__ns1__GetHotWords(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__GetHotWords * soap_new_set__ns1__GetHotWords(struct soap *soap) { _ns1__GetHotWords *_p = soap_instantiate__ns1__GetHotWords(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete__ns1__GetHotWords(struct soap *soap, _ns1__GetHotWords *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__GetHotWords(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__GetSensitiveWordsResponse
#define SOAP_TYPE__ns1__GetSensitiveWordsResponse (16)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetSensitiveWordsResponse(struct soap*, const char*, int, const _ns1__GetSensitiveWordsResponse *, const char*);
SOAP_FMAC3 _ns1__GetSensitiveWordsResponse * SOAP_FMAC4 soap_in__ns1__GetSensitiveWordsResponse(struct soap*, const char*, _ns1__GetSensitiveWordsResponse *, const char*);

#ifndef soap_write__ns1__GetSensitiveWordsResponse
#define soap_write__ns1__GetSensitiveWordsResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:GetSensitiveWordsResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__GetSensitiveWordsResponse * SOAP_FMAC4 soap_get__ns1__GetSensitiveWordsResponse(struct soap*, _ns1__GetSensitiveWordsResponse *, const char*, const char*);

#ifndef soap_read__ns1__GetSensitiveWordsResponse
#define soap_read__ns1__GetSensitiveWordsResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__GetSensitiveWordsResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__GetSensitiveWordsResponse * SOAP_FMAC2 soap_instantiate__ns1__GetSensitiveWordsResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetSensitiveWordsResponse * soap_new__ns1__GetSensitiveWordsResponse(struct soap *soap, int n = -1) { return soap_instantiate__ns1__GetSensitiveWordsResponse(soap, n, NULL, NULL, NULL); }

inline _ns1__GetSensitiveWordsResponse * soap_new_req__ns1__GetSensitiveWordsResponse(struct soap *soap) { _ns1__GetSensitiveWordsResponse *_p = soap_instantiate__ns1__GetSensitiveWordsResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__GetSensitiveWordsResponse * soap_new_set__ns1__GetSensitiveWordsResponse(struct soap *soap, std::string *GetSensitiveWordsResult) { _ns1__GetSensitiveWordsResponse *_p = soap_instantiate__ns1__GetSensitiveWordsResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__GetSensitiveWordsResponse::GetSensitiveWordsResult = GetSensitiveWordsResult; } return _p; }

inline void soap_delete__ns1__GetSensitiveWordsResponse(struct soap *soap, _ns1__GetSensitiveWordsResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__GetSensitiveWordsResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__GetSensitiveWords
#define SOAP_TYPE__ns1__GetSensitiveWords (15)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetSensitiveWords(struct soap*, const char*, int, const _ns1__GetSensitiveWords *, const char*);
SOAP_FMAC3 _ns1__GetSensitiveWords * SOAP_FMAC4 soap_in__ns1__GetSensitiveWords(struct soap*, const char*, _ns1__GetSensitiveWords *, const char*);

#ifndef soap_write__ns1__GetSensitiveWords
#define soap_write__ns1__GetSensitiveWords(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:GetSensitiveWords", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__GetSensitiveWords * SOAP_FMAC4 soap_get__ns1__GetSensitiveWords(struct soap*, _ns1__GetSensitiveWords *, const char*, const char*);

#ifndef soap_read__ns1__GetSensitiveWords
#define soap_read__ns1__GetSensitiveWords(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__GetSensitiveWords(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__GetSensitiveWords * SOAP_FMAC2 soap_instantiate__ns1__GetSensitiveWords(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetSensitiveWords * soap_new__ns1__GetSensitiveWords(struct soap *soap, int n = -1) { return soap_instantiate__ns1__GetSensitiveWords(soap, n, NULL, NULL, NULL); }

inline _ns1__GetSensitiveWords * soap_new_req__ns1__GetSensitiveWords(struct soap *soap) { _ns1__GetSensitiveWords *_p = soap_instantiate__ns1__GetSensitiveWords(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__GetSensitiveWords * soap_new_set__ns1__GetSensitiveWords(struct soap *soap) { _ns1__GetSensitiveWords *_p = soap_instantiate__ns1__GetSensitiveWords(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete__ns1__GetSensitiveWords(struct soap *soap, _ns1__GetSensitiveWords *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__GetSensitiveWords(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__GetUserSettingResponse
#define SOAP_TYPE__ns1__GetUserSettingResponse (14)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetUserSettingResponse(struct soap*, const char*, int, const _ns1__GetUserSettingResponse *, const char*);
SOAP_FMAC3 _ns1__GetUserSettingResponse * SOAP_FMAC4 soap_in__ns1__GetUserSettingResponse(struct soap*, const char*, _ns1__GetUserSettingResponse *, const char*);

#ifndef soap_write__ns1__GetUserSettingResponse
#define soap_write__ns1__GetUserSettingResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:GetUserSettingResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__GetUserSettingResponse * SOAP_FMAC4 soap_get__ns1__GetUserSettingResponse(struct soap*, _ns1__GetUserSettingResponse *, const char*, const char*);

#ifndef soap_read__ns1__GetUserSettingResponse
#define soap_read__ns1__GetUserSettingResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__GetUserSettingResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__GetUserSettingResponse * SOAP_FMAC2 soap_instantiate__ns1__GetUserSettingResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetUserSettingResponse * soap_new__ns1__GetUserSettingResponse(struct soap *soap, int n = -1) { return soap_instantiate__ns1__GetUserSettingResponse(soap, n, NULL, NULL, NULL); }

inline _ns1__GetUserSettingResponse * soap_new_req__ns1__GetUserSettingResponse(struct soap *soap) { _ns1__GetUserSettingResponse *_p = soap_instantiate__ns1__GetUserSettingResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__GetUserSettingResponse * soap_new_set__ns1__GetUserSettingResponse(struct soap *soap, ns1__UserSetting *GetUserSettingResult) { _ns1__GetUserSettingResponse *_p = soap_instantiate__ns1__GetUserSettingResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__GetUserSettingResponse::GetUserSettingResult = GetUserSettingResult; } return _p; }

inline void soap_delete__ns1__GetUserSettingResponse(struct soap *soap, _ns1__GetUserSettingResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__GetUserSettingResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__GetUserSetting
#define SOAP_TYPE__ns1__GetUserSetting (13)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetUserSetting(struct soap*, const char*, int, const _ns1__GetUserSetting *, const char*);
SOAP_FMAC3 _ns1__GetUserSetting * SOAP_FMAC4 soap_in__ns1__GetUserSetting(struct soap*, const char*, _ns1__GetUserSetting *, const char*);

#ifndef soap_write__ns1__GetUserSetting
#define soap_write__ns1__GetUserSetting(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:GetUserSetting", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__GetUserSetting * SOAP_FMAC4 soap_get__ns1__GetUserSetting(struct soap*, _ns1__GetUserSetting *, const char*, const char*);

#ifndef soap_read__ns1__GetUserSetting
#define soap_read__ns1__GetUserSetting(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__GetUserSetting(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__GetUserSetting * SOAP_FMAC2 soap_instantiate__ns1__GetUserSetting(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetUserSetting * soap_new__ns1__GetUserSetting(struct soap *soap, int n = -1) { return soap_instantiate__ns1__GetUserSetting(soap, n, NULL, NULL, NULL); }

inline _ns1__GetUserSetting * soap_new_req__ns1__GetUserSetting(struct soap *soap) { _ns1__GetUserSetting *_p = soap_instantiate__ns1__GetUserSetting(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__GetUserSetting * soap_new_set__ns1__GetUserSetting(struct soap *soap, std::string *mac) { _ns1__GetUserSetting *_p = soap_instantiate__ns1__GetUserSetting(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__GetUserSetting::mac = mac; } return _p; }

inline void soap_delete__ns1__GetUserSetting(struct soap *soap, _ns1__GetUserSetting *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__GetUserSetting(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__GetSystemMessageResponse
#define SOAP_TYPE__ns1__GetSystemMessageResponse (12)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetSystemMessageResponse(struct soap*, const char*, int, const _ns1__GetSystemMessageResponse *, const char*);
SOAP_FMAC3 _ns1__GetSystemMessageResponse * SOAP_FMAC4 soap_in__ns1__GetSystemMessageResponse(struct soap*, const char*, _ns1__GetSystemMessageResponse *, const char*);

#ifndef soap_write__ns1__GetSystemMessageResponse
#define soap_write__ns1__GetSystemMessageResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:GetSystemMessageResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__GetSystemMessageResponse * SOAP_FMAC4 soap_get__ns1__GetSystemMessageResponse(struct soap*, _ns1__GetSystemMessageResponse *, const char*, const char*);

#ifndef soap_read__ns1__GetSystemMessageResponse
#define soap_read__ns1__GetSystemMessageResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__GetSystemMessageResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__GetSystemMessageResponse * SOAP_FMAC2 soap_instantiate__ns1__GetSystemMessageResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetSystemMessageResponse * soap_new__ns1__GetSystemMessageResponse(struct soap *soap, int n = -1) { return soap_instantiate__ns1__GetSystemMessageResponse(soap, n, NULL, NULL, NULL); }

inline _ns1__GetSystemMessageResponse * soap_new_req__ns1__GetSystemMessageResponse(struct soap *soap) { _ns1__GetSystemMessageResponse *_p = soap_instantiate__ns1__GetSystemMessageResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__GetSystemMessageResponse * soap_new_set__ns1__GetSystemMessageResponse(struct soap *soap, std::string *GetSystemMessageResult) { _ns1__GetSystemMessageResponse *_p = soap_instantiate__ns1__GetSystemMessageResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__GetSystemMessageResponse::GetSystemMessageResult = GetSystemMessageResult; } return _p; }

inline void soap_delete__ns1__GetSystemMessageResponse(struct soap *soap, _ns1__GetSystemMessageResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__GetSystemMessageResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__GetSystemMessage
#define SOAP_TYPE__ns1__GetSystemMessage (11)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetSystemMessage(struct soap*, const char*, int, const _ns1__GetSystemMessage *, const char*);
SOAP_FMAC3 _ns1__GetSystemMessage * SOAP_FMAC4 soap_in__ns1__GetSystemMessage(struct soap*, const char*, _ns1__GetSystemMessage *, const char*);

#ifndef soap_write__ns1__GetSystemMessage
#define soap_write__ns1__GetSystemMessage(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:GetSystemMessage", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__GetSystemMessage * SOAP_FMAC4 soap_get__ns1__GetSystemMessage(struct soap*, _ns1__GetSystemMessage *, const char*, const char*);

#ifndef soap_read__ns1__GetSystemMessage
#define soap_read__ns1__GetSystemMessage(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__GetSystemMessage(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__GetSystemMessage * SOAP_FMAC2 soap_instantiate__ns1__GetSystemMessage(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetSystemMessage * soap_new__ns1__GetSystemMessage(struct soap *soap, int n = -1) { return soap_instantiate__ns1__GetSystemMessage(soap, n, NULL, NULL, NULL); }

inline _ns1__GetSystemMessage * soap_new_req__ns1__GetSystemMessage(struct soap *soap) { _ns1__GetSystemMessage *_p = soap_instantiate__ns1__GetSystemMessage(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__GetSystemMessage * soap_new_set__ns1__GetSystemMessage(struct soap *soap, std::string *mac, std::string *version, std::string *extension) { _ns1__GetSystemMessage *_p = soap_instantiate__ns1__GetSystemMessage(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__GetSystemMessage::mac = mac; _p->_ns1__GetSystemMessage::version = version; _p->_ns1__GetSystemMessage::extension = extension; } return _p; }

inline void soap_delete__ns1__GetSystemMessage(struct soap *soap, _ns1__GetSystemMessage *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__GetSystemMessage(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__GetSystemNotifyResponse
#define SOAP_TYPE__ns1__GetSystemNotifyResponse (10)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetSystemNotifyResponse(struct soap*, const char*, int, const _ns1__GetSystemNotifyResponse *, const char*);
SOAP_FMAC3 _ns1__GetSystemNotifyResponse * SOAP_FMAC4 soap_in__ns1__GetSystemNotifyResponse(struct soap*, const char*, _ns1__GetSystemNotifyResponse *, const char*);

#ifndef soap_write__ns1__GetSystemNotifyResponse
#define soap_write__ns1__GetSystemNotifyResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:GetSystemNotifyResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__GetSystemNotifyResponse * SOAP_FMAC4 soap_get__ns1__GetSystemNotifyResponse(struct soap*, _ns1__GetSystemNotifyResponse *, const char*, const char*);

#ifndef soap_read__ns1__GetSystemNotifyResponse
#define soap_read__ns1__GetSystemNotifyResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__GetSystemNotifyResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__GetSystemNotifyResponse * SOAP_FMAC2 soap_instantiate__ns1__GetSystemNotifyResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetSystemNotifyResponse * soap_new__ns1__GetSystemNotifyResponse(struct soap *soap, int n = -1) { return soap_instantiate__ns1__GetSystemNotifyResponse(soap, n, NULL, NULL, NULL); }

inline _ns1__GetSystemNotifyResponse * soap_new_req__ns1__GetSystemNotifyResponse(struct soap *soap) { _ns1__GetSystemNotifyResponse *_p = soap_instantiate__ns1__GetSystemNotifyResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__GetSystemNotifyResponse * soap_new_set__ns1__GetSystemNotifyResponse(struct soap *soap, std::string *GetSystemNotifyResult) { _ns1__GetSystemNotifyResponse *_p = soap_instantiate__ns1__GetSystemNotifyResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__GetSystemNotifyResponse::GetSystemNotifyResult = GetSystemNotifyResult; } return _p; }

inline void soap_delete__ns1__GetSystemNotifyResponse(struct soap *soap, _ns1__GetSystemNotifyResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__GetSystemNotifyResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__GetSystemNotify
#define SOAP_TYPE__ns1__GetSystemNotify (9)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetSystemNotify(struct soap*, const char*, int, const _ns1__GetSystemNotify *, const char*);
SOAP_FMAC3 _ns1__GetSystemNotify * SOAP_FMAC4 soap_in__ns1__GetSystemNotify(struct soap*, const char*, _ns1__GetSystemNotify *, const char*);

#ifndef soap_write__ns1__GetSystemNotify
#define soap_write__ns1__GetSystemNotify(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:GetSystemNotify", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__GetSystemNotify * SOAP_FMAC4 soap_get__ns1__GetSystemNotify(struct soap*, _ns1__GetSystemNotify *, const char*, const char*);

#ifndef soap_read__ns1__GetSystemNotify
#define soap_read__ns1__GetSystemNotify(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__GetSystemNotify(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__GetSystemNotify * SOAP_FMAC2 soap_instantiate__ns1__GetSystemNotify(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetSystemNotify * soap_new__ns1__GetSystemNotify(struct soap *soap, int n = -1) { return soap_instantiate__ns1__GetSystemNotify(soap, n, NULL, NULL, NULL); }

inline _ns1__GetSystemNotify * soap_new_req__ns1__GetSystemNotify(struct soap *soap) { _ns1__GetSystemNotify *_p = soap_instantiate__ns1__GetSystemNotify(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__GetSystemNotify * soap_new_set__ns1__GetSystemNotify(struct soap *soap, std::string *mac, std::string *version) { _ns1__GetSystemNotify *_p = soap_instantiate__ns1__GetSystemNotify(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__GetSystemNotify::mac = mac; _p->_ns1__GetSystemNotify::version = version; } return _p; }

inline void soap_delete__ns1__GetSystemNotify(struct soap *soap, _ns1__GetSystemNotify *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__GetSystemNotify(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__UserSetting
#define SOAP_TYPE_ns1__UserSetting (8)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__UserSetting(struct soap*, const char*, int, const ns1__UserSetting *, const char*);
SOAP_FMAC3 ns1__UserSetting * SOAP_FMAC4 soap_in_ns1__UserSetting(struct soap*, const char*, ns1__UserSetting *, const char*);

#ifndef soap_write_ns1__UserSetting
#define soap_write_ns1__UserSetting(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:UserSetting", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__UserSetting * SOAP_FMAC4 soap_get_ns1__UserSetting(struct soap*, ns1__UserSetting *, const char*, const char*);

#ifndef soap_read_ns1__UserSetting
#define soap_read_ns1__UserSetting(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__UserSetting(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns1__UserSetting * SOAP_FMAC2 soap_instantiate_ns1__UserSetting(struct soap*, int, const char*, const char*, size_t*);

inline ns1__UserSetting * soap_new_ns1__UserSetting(struct soap *soap, int n = -1) { return soap_instantiate_ns1__UserSetting(soap, n, NULL, NULL, NULL); }

inline ns1__UserSetting * soap_new_req_ns1__UserSetting(struct soap *soap) { ns1__UserSetting *_p = soap_instantiate_ns1__UserSetting(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns1__UserSetting * soap_new_set_ns1__UserSetting(struct soap *soap) { ns1__UserSetting *_p = soap_instantiate_ns1__UserSetting(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete_ns1__UserSetting(struct soap *soap, ns1__UserSetting *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__UserSetting(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (100)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Fault(struct soap*, const char*, int, const struct SOAP_ENV__Fault *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_in_SOAP_ENV__Fault(struct soap*, const char*, struct SOAP_ENV__Fault *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Fault
#define soap_write_SOAP_ENV__Fault(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Fault(soap, data),0) || soap_put_SOAP_ENV__Fault(soap, data, "SOAP-ENV:Fault", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_get_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Fault
#define soap_read_SOAP_ENV__Fault(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Fault(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Fault * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Fault(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Fault * soap_new_SOAP_ENV__Fault(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Fault(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Fault * soap_new_req_SOAP_ENV__Fault(struct soap *soap) { struct SOAP_ENV__Fault *_p = soap_instantiate_SOAP_ENV__Fault(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Fault(soap, _p); } return _p; }

inline struct SOAP_ENV__Fault * soap_new_set_SOAP_ENV__Fault(struct soap *soap, char *faultcode, char *faultstring, char *faultactor, struct SOAP_ENV__Detail *detail, struct SOAP_ENV__Code *SOAP_ENV__Code, struct SOAP_ENV__Reason *SOAP_ENV__Reason, char *SOAP_ENV__Node, char *SOAP_ENV__Role, struct SOAP_ENV__Detail *SOAP_ENV__Detail) { struct SOAP_ENV__Fault *_p = soap_instantiate_SOAP_ENV__Fault(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Fault(soap, _p); _p->faultcode = faultcode; _p->faultstring = faultstring; _p->faultactor = faultactor; _p->detail = detail; _p->SOAP_ENV__Code = SOAP_ENV__Code; _p->SOAP_ENV__Reason = SOAP_ENV__Reason; _p->SOAP_ENV__Node = SOAP_ENV__Node; _p->SOAP_ENV__Role = SOAP_ENV__Role; _p->SOAP_ENV__Detail = SOAP_ENV__Detail; } return _p; }

inline void soap_delete_SOAP_ENV__Fault(struct soap *soap, struct SOAP_ENV__Fault *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Fault(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (99)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Reason(struct soap*, const char*, int, const struct SOAP_ENV__Reason *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_in_SOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Reason
#define soap_write_SOAP_ENV__Reason(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Reason(soap, data),0) || soap_put_SOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_get_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Reason
#define soap_read_SOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Reason * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Reason(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Reason * soap_new_SOAP_ENV__Reason(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Reason(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Reason * soap_new_req_SOAP_ENV__Reason(struct soap *soap) { struct SOAP_ENV__Reason *_p = soap_instantiate_SOAP_ENV__Reason(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Reason(soap, _p); } return _p; }

inline struct SOAP_ENV__Reason * soap_new_set_SOAP_ENV__Reason(struct soap *soap, char *SOAP_ENV__Text) { struct SOAP_ENV__Reason *_p = soap_instantiate_SOAP_ENV__Reason(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Reason(soap, _p); _p->SOAP_ENV__Text = SOAP_ENV__Text; } return _p; }

inline void soap_delete_SOAP_ENV__Reason(struct soap *soap, struct SOAP_ENV__Reason *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Reason(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (96)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Detail(struct soap*, const char*, int, const struct SOAP_ENV__Detail *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_in_SOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Detail
#define soap_write_SOAP_ENV__Detail(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Detail(soap, data),0) || soap_put_SOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_get_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Detail
#define soap_read_SOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Detail * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Detail(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Detail * soap_new_SOAP_ENV__Detail(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Detail(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Detail * soap_new_req_SOAP_ENV__Detail(struct soap *soap, int __type, void *fault) { struct SOAP_ENV__Detail *_p = soap_instantiate_SOAP_ENV__Detail(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Detail(soap, _p); _p->__type = __type; _p->fault = fault; } return _p; }

inline struct SOAP_ENV__Detail * soap_new_set_SOAP_ENV__Detail(struct soap *soap, char *__any, int __type, void *fault) { struct SOAP_ENV__Detail *_p = soap_instantiate_SOAP_ENV__Detail(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Detail(soap, _p); _p->__any = __any; _p->__type = __type; _p->fault = fault; } return _p; }

inline void soap_delete_SOAP_ENV__Detail(struct soap *soap, struct SOAP_ENV__Detail *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Detail(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (94)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Code(struct soap*, const char*, int, const struct SOAP_ENV__Code *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_in_SOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Code
#define soap_write_SOAP_ENV__Code(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Code(soap, data),0) || soap_put_SOAP_ENV__Code(soap, data, "SOAP-ENV:Code", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_get_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Code
#define soap_read_SOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Code * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Code(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Code * soap_new_SOAP_ENV__Code(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Code(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Code * soap_new_req_SOAP_ENV__Code(struct soap *soap) { struct SOAP_ENV__Code *_p = soap_instantiate_SOAP_ENV__Code(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Code(soap, _p); } return _p; }

inline struct SOAP_ENV__Code * soap_new_set_SOAP_ENV__Code(struct soap *soap, char *SOAP_ENV__Value, struct SOAP_ENV__Code *SOAP_ENV__Subcode) { struct SOAP_ENV__Code *_p = soap_instantiate_SOAP_ENV__Code(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Code(soap, _p); _p->SOAP_ENV__Value = SOAP_ENV__Value; _p->SOAP_ENV__Subcode = SOAP_ENV__Subcode; } return _p; }

inline void soap_delete_SOAP_ENV__Code(struct soap *soap, struct SOAP_ENV__Code *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Code(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (93)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Header(struct soap*, const char*, int, const struct SOAP_ENV__Header *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_in_SOAP_ENV__Header(struct soap*, const char*, struct SOAP_ENV__Header *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Header
#define soap_write_SOAP_ENV__Header(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Header(soap, data),0) || soap_put_SOAP_ENV__Header(soap, data, "SOAP-ENV:Header", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_get_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Header
#define soap_read_SOAP_ENV__Header(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Header(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Header * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Header(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Header * soap_new_SOAP_ENV__Header(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Header(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Header * soap_new_req_SOAP_ENV__Header(struct soap *soap) { struct SOAP_ENV__Header *_p = soap_instantiate_SOAP_ENV__Header(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Header(soap, _p); } return _p; }

inline struct SOAP_ENV__Header * soap_new_set_SOAP_ENV__Header(struct soap *soap) { struct SOAP_ENV__Header *_p = soap_instantiate_SOAP_ENV__Header(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Header(soap, _p); } return _p; }

inline void soap_delete_SOAP_ENV__Header(struct soap *soap, struct SOAP_ENV__Header *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Header(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef SOAP_TYPE___ns1__SetPlayLog_
#define SOAP_TYPE___ns1__SetPlayLog_ (92)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__SetPlayLog_(struct soap*, struct __ns1__SetPlayLog_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__SetPlayLog_(struct soap*, const struct __ns1__SetPlayLog_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__SetPlayLog_(struct soap*, const char*, int, const struct __ns1__SetPlayLog_ *, const char*);
SOAP_FMAC3 struct __ns1__SetPlayLog_ * SOAP_FMAC4 soap_in___ns1__SetPlayLog_(struct soap*, const char*, struct __ns1__SetPlayLog_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__SetPlayLog_(struct soap*, const struct __ns1__SetPlayLog_ *, const char*, const char*);

#ifndef soap_write___ns1__SetPlayLog_
#define soap_write___ns1__SetPlayLog_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__SetPlayLog_(soap, data),0) || soap_put___ns1__SetPlayLog_(soap, data, "-ns1:SetPlayLog", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__SetPlayLog_ * SOAP_FMAC4 soap_get___ns1__SetPlayLog_(struct soap*, struct __ns1__SetPlayLog_ *, const char*, const char*);

#ifndef soap_read___ns1__SetPlayLog_
#define soap_read___ns1__SetPlayLog_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__SetPlayLog_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__SetPlayLog_ * SOAP_FMAC2 soap_instantiate___ns1__SetPlayLog_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__SetPlayLog_ * soap_new___ns1__SetPlayLog_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__SetPlayLog_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__SetPlayLog_ * soap_new_req___ns1__SetPlayLog_(struct soap *soap) { struct __ns1__SetPlayLog_ *_p = soap_instantiate___ns1__SetPlayLog_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__SetPlayLog_(soap, _p); } return _p; }

inline struct __ns1__SetPlayLog_ * soap_new_set___ns1__SetPlayLog_(struct soap *soap, _ns1__SetPlayLog *ns1__SetPlayLog) { struct __ns1__SetPlayLog_ *_p = soap_instantiate___ns1__SetPlayLog_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__SetPlayLog_(soap, _p); _p->ns1__SetPlayLog = ns1__SetPlayLog; } return _p; }

inline void soap_delete___ns1__SetPlayLog_(struct soap *soap, struct __ns1__SetPlayLog_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__SetPlayLog_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__SetFeedback_
#define SOAP_TYPE___ns1__SetFeedback_ (90)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__SetFeedback_(struct soap*, struct __ns1__SetFeedback_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__SetFeedback_(struct soap*, const struct __ns1__SetFeedback_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__SetFeedback_(struct soap*, const char*, int, const struct __ns1__SetFeedback_ *, const char*);
SOAP_FMAC3 struct __ns1__SetFeedback_ * SOAP_FMAC4 soap_in___ns1__SetFeedback_(struct soap*, const char*, struct __ns1__SetFeedback_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__SetFeedback_(struct soap*, const struct __ns1__SetFeedback_ *, const char*, const char*);

#ifndef soap_write___ns1__SetFeedback_
#define soap_write___ns1__SetFeedback_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__SetFeedback_(soap, data),0) || soap_put___ns1__SetFeedback_(soap, data, "-ns1:SetFeedback", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__SetFeedback_ * SOAP_FMAC4 soap_get___ns1__SetFeedback_(struct soap*, struct __ns1__SetFeedback_ *, const char*, const char*);

#ifndef soap_read___ns1__SetFeedback_
#define soap_read___ns1__SetFeedback_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__SetFeedback_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__SetFeedback_ * SOAP_FMAC2 soap_instantiate___ns1__SetFeedback_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__SetFeedback_ * soap_new___ns1__SetFeedback_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__SetFeedback_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__SetFeedback_ * soap_new_req___ns1__SetFeedback_(struct soap *soap) { struct __ns1__SetFeedback_ *_p = soap_instantiate___ns1__SetFeedback_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__SetFeedback_(soap, _p); } return _p; }

inline struct __ns1__SetFeedback_ * soap_new_set___ns1__SetFeedback_(struct soap *soap, _ns1__SetFeedback *ns1__SetFeedback) { struct __ns1__SetFeedback_ *_p = soap_instantiate___ns1__SetFeedback_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__SetFeedback_(soap, _p); _p->ns1__SetFeedback = ns1__SetFeedback; } return _p; }

inline void soap_delete___ns1__SetFeedback_(struct soap *soap, struct __ns1__SetFeedback_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__SetFeedback_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__SetSearchLog_
#define SOAP_TYPE___ns1__SetSearchLog_ (88)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__SetSearchLog_(struct soap*, struct __ns1__SetSearchLog_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__SetSearchLog_(struct soap*, const struct __ns1__SetSearchLog_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__SetSearchLog_(struct soap*, const char*, int, const struct __ns1__SetSearchLog_ *, const char*);
SOAP_FMAC3 struct __ns1__SetSearchLog_ * SOAP_FMAC4 soap_in___ns1__SetSearchLog_(struct soap*, const char*, struct __ns1__SetSearchLog_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__SetSearchLog_(struct soap*, const struct __ns1__SetSearchLog_ *, const char*, const char*);

#ifndef soap_write___ns1__SetSearchLog_
#define soap_write___ns1__SetSearchLog_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__SetSearchLog_(soap, data),0) || soap_put___ns1__SetSearchLog_(soap, data, "-ns1:SetSearchLog", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__SetSearchLog_ * SOAP_FMAC4 soap_get___ns1__SetSearchLog_(struct soap*, struct __ns1__SetSearchLog_ *, const char*, const char*);

#ifndef soap_read___ns1__SetSearchLog_
#define soap_read___ns1__SetSearchLog_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__SetSearchLog_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__SetSearchLog_ * SOAP_FMAC2 soap_instantiate___ns1__SetSearchLog_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__SetSearchLog_ * soap_new___ns1__SetSearchLog_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__SetSearchLog_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__SetSearchLog_ * soap_new_req___ns1__SetSearchLog_(struct soap *soap) { struct __ns1__SetSearchLog_ *_p = soap_instantiate___ns1__SetSearchLog_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__SetSearchLog_(soap, _p); } return _p; }

inline struct __ns1__SetSearchLog_ * soap_new_set___ns1__SetSearchLog_(struct soap *soap, _ns1__SetSearchLog *ns1__SetSearchLog) { struct __ns1__SetSearchLog_ *_p = soap_instantiate___ns1__SetSearchLog_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__SetSearchLog_(soap, _p); _p->ns1__SetSearchLog = ns1__SetSearchLog; } return _p; }

inline void soap_delete___ns1__SetSearchLog_(struct soap *soap, struct __ns1__SetSearchLog_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__SetSearchLog_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__GetRandomWord_
#define SOAP_TYPE___ns1__GetRandomWord_ (86)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetRandomWord_(struct soap*, struct __ns1__GetRandomWord_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetRandomWord_(struct soap*, const struct __ns1__GetRandomWord_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetRandomWord_(struct soap*, const char*, int, const struct __ns1__GetRandomWord_ *, const char*);
SOAP_FMAC3 struct __ns1__GetRandomWord_ * SOAP_FMAC4 soap_in___ns1__GetRandomWord_(struct soap*, const char*, struct __ns1__GetRandomWord_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetRandomWord_(struct soap*, const struct __ns1__GetRandomWord_ *, const char*, const char*);

#ifndef soap_write___ns1__GetRandomWord_
#define soap_write___ns1__GetRandomWord_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__GetRandomWord_(soap, data),0) || soap_put___ns1__GetRandomWord_(soap, data, "-ns1:GetRandomWord", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__GetRandomWord_ * SOAP_FMAC4 soap_get___ns1__GetRandomWord_(struct soap*, struct __ns1__GetRandomWord_ *, const char*, const char*);

#ifndef soap_read___ns1__GetRandomWord_
#define soap_read___ns1__GetRandomWord_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__GetRandomWord_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__GetRandomWord_ * SOAP_FMAC2 soap_instantiate___ns1__GetRandomWord_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetRandomWord_ * soap_new___ns1__GetRandomWord_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__GetRandomWord_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__GetRandomWord_ * soap_new_req___ns1__GetRandomWord_(struct soap *soap) { struct __ns1__GetRandomWord_ *_p = soap_instantiate___ns1__GetRandomWord_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__GetRandomWord_(soap, _p); } return _p; }

inline struct __ns1__GetRandomWord_ * soap_new_set___ns1__GetRandomWord_(struct soap *soap, _ns1__GetRandomWord *ns1__GetRandomWord) { struct __ns1__GetRandomWord_ *_p = soap_instantiate___ns1__GetRandomWord_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__GetRandomWord_(soap, _p); _p->ns1__GetRandomWord = ns1__GetRandomWord; } return _p; }

inline void soap_delete___ns1__GetRandomWord_(struct soap *soap, struct __ns1__GetRandomWord_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__GetRandomWord_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__GetHotEd2ks_
#define SOAP_TYPE___ns1__GetHotEd2ks_ (84)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetHotEd2ks_(struct soap*, struct __ns1__GetHotEd2ks_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetHotEd2ks_(struct soap*, const struct __ns1__GetHotEd2ks_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetHotEd2ks_(struct soap*, const char*, int, const struct __ns1__GetHotEd2ks_ *, const char*);
SOAP_FMAC3 struct __ns1__GetHotEd2ks_ * SOAP_FMAC4 soap_in___ns1__GetHotEd2ks_(struct soap*, const char*, struct __ns1__GetHotEd2ks_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetHotEd2ks_(struct soap*, const struct __ns1__GetHotEd2ks_ *, const char*, const char*);

#ifndef soap_write___ns1__GetHotEd2ks_
#define soap_write___ns1__GetHotEd2ks_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__GetHotEd2ks_(soap, data),0) || soap_put___ns1__GetHotEd2ks_(soap, data, "-ns1:GetHotEd2ks", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__GetHotEd2ks_ * SOAP_FMAC4 soap_get___ns1__GetHotEd2ks_(struct soap*, struct __ns1__GetHotEd2ks_ *, const char*, const char*);

#ifndef soap_read___ns1__GetHotEd2ks_
#define soap_read___ns1__GetHotEd2ks_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__GetHotEd2ks_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__GetHotEd2ks_ * SOAP_FMAC2 soap_instantiate___ns1__GetHotEd2ks_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetHotEd2ks_ * soap_new___ns1__GetHotEd2ks_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__GetHotEd2ks_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__GetHotEd2ks_ * soap_new_req___ns1__GetHotEd2ks_(struct soap *soap) { struct __ns1__GetHotEd2ks_ *_p = soap_instantiate___ns1__GetHotEd2ks_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__GetHotEd2ks_(soap, _p); } return _p; }

inline struct __ns1__GetHotEd2ks_ * soap_new_set___ns1__GetHotEd2ks_(struct soap *soap, _ns1__GetHotEd2ks *ns1__GetHotEd2ks) { struct __ns1__GetHotEd2ks_ *_p = soap_instantiate___ns1__GetHotEd2ks_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__GetHotEd2ks_(soap, _p); _p->ns1__GetHotEd2ks = ns1__GetHotEd2ks; } return _p; }

inline void soap_delete___ns1__GetHotEd2ks_(struct soap *soap, struct __ns1__GetHotEd2ks_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__GetHotEd2ks_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__GetHotWords_
#define SOAP_TYPE___ns1__GetHotWords_ (82)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetHotWords_(struct soap*, struct __ns1__GetHotWords_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetHotWords_(struct soap*, const struct __ns1__GetHotWords_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetHotWords_(struct soap*, const char*, int, const struct __ns1__GetHotWords_ *, const char*);
SOAP_FMAC3 struct __ns1__GetHotWords_ * SOAP_FMAC4 soap_in___ns1__GetHotWords_(struct soap*, const char*, struct __ns1__GetHotWords_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetHotWords_(struct soap*, const struct __ns1__GetHotWords_ *, const char*, const char*);

#ifndef soap_write___ns1__GetHotWords_
#define soap_write___ns1__GetHotWords_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__GetHotWords_(soap, data),0) || soap_put___ns1__GetHotWords_(soap, data, "-ns1:GetHotWords", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__GetHotWords_ * SOAP_FMAC4 soap_get___ns1__GetHotWords_(struct soap*, struct __ns1__GetHotWords_ *, const char*, const char*);

#ifndef soap_read___ns1__GetHotWords_
#define soap_read___ns1__GetHotWords_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__GetHotWords_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__GetHotWords_ * SOAP_FMAC2 soap_instantiate___ns1__GetHotWords_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetHotWords_ * soap_new___ns1__GetHotWords_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__GetHotWords_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__GetHotWords_ * soap_new_req___ns1__GetHotWords_(struct soap *soap) { struct __ns1__GetHotWords_ *_p = soap_instantiate___ns1__GetHotWords_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__GetHotWords_(soap, _p); } return _p; }

inline struct __ns1__GetHotWords_ * soap_new_set___ns1__GetHotWords_(struct soap *soap, _ns1__GetHotWords *ns1__GetHotWords) { struct __ns1__GetHotWords_ *_p = soap_instantiate___ns1__GetHotWords_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__GetHotWords_(soap, _p); _p->ns1__GetHotWords = ns1__GetHotWords; } return _p; }

inline void soap_delete___ns1__GetHotWords_(struct soap *soap, struct __ns1__GetHotWords_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__GetHotWords_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__GetSensitiveWords_
#define SOAP_TYPE___ns1__GetSensitiveWords_ (80)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetSensitiveWords_(struct soap*, struct __ns1__GetSensitiveWords_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetSensitiveWords_(struct soap*, const struct __ns1__GetSensitiveWords_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetSensitiveWords_(struct soap*, const char*, int, const struct __ns1__GetSensitiveWords_ *, const char*);
SOAP_FMAC3 struct __ns1__GetSensitiveWords_ * SOAP_FMAC4 soap_in___ns1__GetSensitiveWords_(struct soap*, const char*, struct __ns1__GetSensitiveWords_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetSensitiveWords_(struct soap*, const struct __ns1__GetSensitiveWords_ *, const char*, const char*);

#ifndef soap_write___ns1__GetSensitiveWords_
#define soap_write___ns1__GetSensitiveWords_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__GetSensitiveWords_(soap, data),0) || soap_put___ns1__GetSensitiveWords_(soap, data, "-ns1:GetSensitiveWords", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__GetSensitiveWords_ * SOAP_FMAC4 soap_get___ns1__GetSensitiveWords_(struct soap*, struct __ns1__GetSensitiveWords_ *, const char*, const char*);

#ifndef soap_read___ns1__GetSensitiveWords_
#define soap_read___ns1__GetSensitiveWords_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__GetSensitiveWords_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__GetSensitiveWords_ * SOAP_FMAC2 soap_instantiate___ns1__GetSensitiveWords_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetSensitiveWords_ * soap_new___ns1__GetSensitiveWords_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__GetSensitiveWords_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__GetSensitiveWords_ * soap_new_req___ns1__GetSensitiveWords_(struct soap *soap) { struct __ns1__GetSensitiveWords_ *_p = soap_instantiate___ns1__GetSensitiveWords_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__GetSensitiveWords_(soap, _p); } return _p; }

inline struct __ns1__GetSensitiveWords_ * soap_new_set___ns1__GetSensitiveWords_(struct soap *soap, _ns1__GetSensitiveWords *ns1__GetSensitiveWords) { struct __ns1__GetSensitiveWords_ *_p = soap_instantiate___ns1__GetSensitiveWords_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__GetSensitiveWords_(soap, _p); _p->ns1__GetSensitiveWords = ns1__GetSensitiveWords; } return _p; }

inline void soap_delete___ns1__GetSensitiveWords_(struct soap *soap, struct __ns1__GetSensitiveWords_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__GetSensitiveWords_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__GetUserSetting_
#define SOAP_TYPE___ns1__GetUserSetting_ (78)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetUserSetting_(struct soap*, struct __ns1__GetUserSetting_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetUserSetting_(struct soap*, const struct __ns1__GetUserSetting_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetUserSetting_(struct soap*, const char*, int, const struct __ns1__GetUserSetting_ *, const char*);
SOAP_FMAC3 struct __ns1__GetUserSetting_ * SOAP_FMAC4 soap_in___ns1__GetUserSetting_(struct soap*, const char*, struct __ns1__GetUserSetting_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetUserSetting_(struct soap*, const struct __ns1__GetUserSetting_ *, const char*, const char*);

#ifndef soap_write___ns1__GetUserSetting_
#define soap_write___ns1__GetUserSetting_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__GetUserSetting_(soap, data),0) || soap_put___ns1__GetUserSetting_(soap, data, "-ns1:GetUserSetting", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__GetUserSetting_ * SOAP_FMAC4 soap_get___ns1__GetUserSetting_(struct soap*, struct __ns1__GetUserSetting_ *, const char*, const char*);

#ifndef soap_read___ns1__GetUserSetting_
#define soap_read___ns1__GetUserSetting_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__GetUserSetting_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__GetUserSetting_ * SOAP_FMAC2 soap_instantiate___ns1__GetUserSetting_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetUserSetting_ * soap_new___ns1__GetUserSetting_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__GetUserSetting_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__GetUserSetting_ * soap_new_req___ns1__GetUserSetting_(struct soap *soap) { struct __ns1__GetUserSetting_ *_p = soap_instantiate___ns1__GetUserSetting_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__GetUserSetting_(soap, _p); } return _p; }

inline struct __ns1__GetUserSetting_ * soap_new_set___ns1__GetUserSetting_(struct soap *soap, _ns1__GetUserSetting *ns1__GetUserSetting) { struct __ns1__GetUserSetting_ *_p = soap_instantiate___ns1__GetUserSetting_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__GetUserSetting_(soap, _p); _p->ns1__GetUserSetting = ns1__GetUserSetting; } return _p; }

inline void soap_delete___ns1__GetUserSetting_(struct soap *soap, struct __ns1__GetUserSetting_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__GetUserSetting_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__GetSystemMessage_
#define SOAP_TYPE___ns1__GetSystemMessage_ (76)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetSystemMessage_(struct soap*, struct __ns1__GetSystemMessage_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetSystemMessage_(struct soap*, const struct __ns1__GetSystemMessage_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetSystemMessage_(struct soap*, const char*, int, const struct __ns1__GetSystemMessage_ *, const char*);
SOAP_FMAC3 struct __ns1__GetSystemMessage_ * SOAP_FMAC4 soap_in___ns1__GetSystemMessage_(struct soap*, const char*, struct __ns1__GetSystemMessage_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetSystemMessage_(struct soap*, const struct __ns1__GetSystemMessage_ *, const char*, const char*);

#ifndef soap_write___ns1__GetSystemMessage_
#define soap_write___ns1__GetSystemMessage_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__GetSystemMessage_(soap, data),0) || soap_put___ns1__GetSystemMessage_(soap, data, "-ns1:GetSystemMessage", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__GetSystemMessage_ * SOAP_FMAC4 soap_get___ns1__GetSystemMessage_(struct soap*, struct __ns1__GetSystemMessage_ *, const char*, const char*);

#ifndef soap_read___ns1__GetSystemMessage_
#define soap_read___ns1__GetSystemMessage_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__GetSystemMessage_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__GetSystemMessage_ * SOAP_FMAC2 soap_instantiate___ns1__GetSystemMessage_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetSystemMessage_ * soap_new___ns1__GetSystemMessage_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__GetSystemMessage_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__GetSystemMessage_ * soap_new_req___ns1__GetSystemMessage_(struct soap *soap) { struct __ns1__GetSystemMessage_ *_p = soap_instantiate___ns1__GetSystemMessage_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__GetSystemMessage_(soap, _p); } return _p; }

inline struct __ns1__GetSystemMessage_ * soap_new_set___ns1__GetSystemMessage_(struct soap *soap, _ns1__GetSystemMessage *ns1__GetSystemMessage) { struct __ns1__GetSystemMessage_ *_p = soap_instantiate___ns1__GetSystemMessage_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__GetSystemMessage_(soap, _p); _p->ns1__GetSystemMessage = ns1__GetSystemMessage; } return _p; }

inline void soap_delete___ns1__GetSystemMessage_(struct soap *soap, struct __ns1__GetSystemMessage_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__GetSystemMessage_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__GetSystemNotify_
#define SOAP_TYPE___ns1__GetSystemNotify_ (74)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetSystemNotify_(struct soap*, struct __ns1__GetSystemNotify_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetSystemNotify_(struct soap*, const struct __ns1__GetSystemNotify_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetSystemNotify_(struct soap*, const char*, int, const struct __ns1__GetSystemNotify_ *, const char*);
SOAP_FMAC3 struct __ns1__GetSystemNotify_ * SOAP_FMAC4 soap_in___ns1__GetSystemNotify_(struct soap*, const char*, struct __ns1__GetSystemNotify_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetSystemNotify_(struct soap*, const struct __ns1__GetSystemNotify_ *, const char*, const char*);

#ifndef soap_write___ns1__GetSystemNotify_
#define soap_write___ns1__GetSystemNotify_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__GetSystemNotify_(soap, data),0) || soap_put___ns1__GetSystemNotify_(soap, data, "-ns1:GetSystemNotify", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__GetSystemNotify_ * SOAP_FMAC4 soap_get___ns1__GetSystemNotify_(struct soap*, struct __ns1__GetSystemNotify_ *, const char*, const char*);

#ifndef soap_read___ns1__GetSystemNotify_
#define soap_read___ns1__GetSystemNotify_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__GetSystemNotify_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__GetSystemNotify_ * SOAP_FMAC2 soap_instantiate___ns1__GetSystemNotify_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetSystemNotify_ * soap_new___ns1__GetSystemNotify_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__GetSystemNotify_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__GetSystemNotify_ * soap_new_req___ns1__GetSystemNotify_(struct soap *soap) { struct __ns1__GetSystemNotify_ *_p = soap_instantiate___ns1__GetSystemNotify_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__GetSystemNotify_(soap, _p); } return _p; }

inline struct __ns1__GetSystemNotify_ * soap_new_set___ns1__GetSystemNotify_(struct soap *soap, _ns1__GetSystemNotify *ns1__GetSystemNotify) { struct __ns1__GetSystemNotify_ *_p = soap_instantiate___ns1__GetSystemNotify_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__GetSystemNotify_(soap, _p); _p->ns1__GetSystemNotify = ns1__GetSystemNotify; } return _p; }

inline void soap_delete___ns1__GetSystemNotify_(struct soap *soap, struct __ns1__GetSystemNotify_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__GetSystemNotify_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__SetPlayLog
#define SOAP_TYPE___ns1__SetPlayLog (72)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__SetPlayLog(struct soap*, struct __ns1__SetPlayLog *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__SetPlayLog(struct soap*, const struct __ns1__SetPlayLog *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__SetPlayLog(struct soap*, const char*, int, const struct __ns1__SetPlayLog *, const char*);
SOAP_FMAC3 struct __ns1__SetPlayLog * SOAP_FMAC4 soap_in___ns1__SetPlayLog(struct soap*, const char*, struct __ns1__SetPlayLog *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__SetPlayLog(struct soap*, const struct __ns1__SetPlayLog *, const char*, const char*);

#ifndef soap_write___ns1__SetPlayLog
#define soap_write___ns1__SetPlayLog(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__SetPlayLog(soap, data),0) || soap_put___ns1__SetPlayLog(soap, data, "-ns1:SetPlayLog", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__SetPlayLog * SOAP_FMAC4 soap_get___ns1__SetPlayLog(struct soap*, struct __ns1__SetPlayLog *, const char*, const char*);

#ifndef soap_read___ns1__SetPlayLog
#define soap_read___ns1__SetPlayLog(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__SetPlayLog(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__SetPlayLog * SOAP_FMAC2 soap_instantiate___ns1__SetPlayLog(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__SetPlayLog * soap_new___ns1__SetPlayLog(struct soap *soap, int n = -1) { return soap_instantiate___ns1__SetPlayLog(soap, n, NULL, NULL, NULL); }

inline struct __ns1__SetPlayLog * soap_new_req___ns1__SetPlayLog(struct soap *soap) { struct __ns1__SetPlayLog *_p = soap_instantiate___ns1__SetPlayLog(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__SetPlayLog(soap, _p); } return _p; }

inline struct __ns1__SetPlayLog * soap_new_set___ns1__SetPlayLog(struct soap *soap, _ns1__SetPlayLog *ns1__SetPlayLog) { struct __ns1__SetPlayLog *_p = soap_instantiate___ns1__SetPlayLog(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__SetPlayLog(soap, _p); _p->ns1__SetPlayLog = ns1__SetPlayLog; } return _p; }

inline void soap_delete___ns1__SetPlayLog(struct soap *soap, struct __ns1__SetPlayLog *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__SetPlayLog(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__SetFeedback
#define SOAP_TYPE___ns1__SetFeedback (68)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__SetFeedback(struct soap*, struct __ns1__SetFeedback *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__SetFeedback(struct soap*, const struct __ns1__SetFeedback *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__SetFeedback(struct soap*, const char*, int, const struct __ns1__SetFeedback *, const char*);
SOAP_FMAC3 struct __ns1__SetFeedback * SOAP_FMAC4 soap_in___ns1__SetFeedback(struct soap*, const char*, struct __ns1__SetFeedback *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__SetFeedback(struct soap*, const struct __ns1__SetFeedback *, const char*, const char*);

#ifndef soap_write___ns1__SetFeedback
#define soap_write___ns1__SetFeedback(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__SetFeedback(soap, data),0) || soap_put___ns1__SetFeedback(soap, data, "-ns1:SetFeedback", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__SetFeedback * SOAP_FMAC4 soap_get___ns1__SetFeedback(struct soap*, struct __ns1__SetFeedback *, const char*, const char*);

#ifndef soap_read___ns1__SetFeedback
#define soap_read___ns1__SetFeedback(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__SetFeedback(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__SetFeedback * SOAP_FMAC2 soap_instantiate___ns1__SetFeedback(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__SetFeedback * soap_new___ns1__SetFeedback(struct soap *soap, int n = -1) { return soap_instantiate___ns1__SetFeedback(soap, n, NULL, NULL, NULL); }

inline struct __ns1__SetFeedback * soap_new_req___ns1__SetFeedback(struct soap *soap) { struct __ns1__SetFeedback *_p = soap_instantiate___ns1__SetFeedback(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__SetFeedback(soap, _p); } return _p; }

inline struct __ns1__SetFeedback * soap_new_set___ns1__SetFeedback(struct soap *soap, _ns1__SetFeedback *ns1__SetFeedback) { struct __ns1__SetFeedback *_p = soap_instantiate___ns1__SetFeedback(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__SetFeedback(soap, _p); _p->ns1__SetFeedback = ns1__SetFeedback; } return _p; }

inline void soap_delete___ns1__SetFeedback(struct soap *soap, struct __ns1__SetFeedback *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__SetFeedback(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__SetSearchLog
#define SOAP_TYPE___ns1__SetSearchLog (64)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__SetSearchLog(struct soap*, struct __ns1__SetSearchLog *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__SetSearchLog(struct soap*, const struct __ns1__SetSearchLog *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__SetSearchLog(struct soap*, const char*, int, const struct __ns1__SetSearchLog *, const char*);
SOAP_FMAC3 struct __ns1__SetSearchLog * SOAP_FMAC4 soap_in___ns1__SetSearchLog(struct soap*, const char*, struct __ns1__SetSearchLog *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__SetSearchLog(struct soap*, const struct __ns1__SetSearchLog *, const char*, const char*);

#ifndef soap_write___ns1__SetSearchLog
#define soap_write___ns1__SetSearchLog(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__SetSearchLog(soap, data),0) || soap_put___ns1__SetSearchLog(soap, data, "-ns1:SetSearchLog", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__SetSearchLog * SOAP_FMAC4 soap_get___ns1__SetSearchLog(struct soap*, struct __ns1__SetSearchLog *, const char*, const char*);

#ifndef soap_read___ns1__SetSearchLog
#define soap_read___ns1__SetSearchLog(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__SetSearchLog(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__SetSearchLog * SOAP_FMAC2 soap_instantiate___ns1__SetSearchLog(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__SetSearchLog * soap_new___ns1__SetSearchLog(struct soap *soap, int n = -1) { return soap_instantiate___ns1__SetSearchLog(soap, n, NULL, NULL, NULL); }

inline struct __ns1__SetSearchLog * soap_new_req___ns1__SetSearchLog(struct soap *soap) { struct __ns1__SetSearchLog *_p = soap_instantiate___ns1__SetSearchLog(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__SetSearchLog(soap, _p); } return _p; }

inline struct __ns1__SetSearchLog * soap_new_set___ns1__SetSearchLog(struct soap *soap, _ns1__SetSearchLog *ns1__SetSearchLog) { struct __ns1__SetSearchLog *_p = soap_instantiate___ns1__SetSearchLog(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__SetSearchLog(soap, _p); _p->ns1__SetSearchLog = ns1__SetSearchLog; } return _p; }

inline void soap_delete___ns1__SetSearchLog(struct soap *soap, struct __ns1__SetSearchLog *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__SetSearchLog(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__GetRandomWord
#define SOAP_TYPE___ns1__GetRandomWord (60)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetRandomWord(struct soap*, struct __ns1__GetRandomWord *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetRandomWord(struct soap*, const struct __ns1__GetRandomWord *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetRandomWord(struct soap*, const char*, int, const struct __ns1__GetRandomWord *, const char*);
SOAP_FMAC3 struct __ns1__GetRandomWord * SOAP_FMAC4 soap_in___ns1__GetRandomWord(struct soap*, const char*, struct __ns1__GetRandomWord *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetRandomWord(struct soap*, const struct __ns1__GetRandomWord *, const char*, const char*);

#ifndef soap_write___ns1__GetRandomWord
#define soap_write___ns1__GetRandomWord(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__GetRandomWord(soap, data),0) || soap_put___ns1__GetRandomWord(soap, data, "-ns1:GetRandomWord", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__GetRandomWord * SOAP_FMAC4 soap_get___ns1__GetRandomWord(struct soap*, struct __ns1__GetRandomWord *, const char*, const char*);

#ifndef soap_read___ns1__GetRandomWord
#define soap_read___ns1__GetRandomWord(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__GetRandomWord(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__GetRandomWord * SOAP_FMAC2 soap_instantiate___ns1__GetRandomWord(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetRandomWord * soap_new___ns1__GetRandomWord(struct soap *soap, int n = -1) { return soap_instantiate___ns1__GetRandomWord(soap, n, NULL, NULL, NULL); }

inline struct __ns1__GetRandomWord * soap_new_req___ns1__GetRandomWord(struct soap *soap) { struct __ns1__GetRandomWord *_p = soap_instantiate___ns1__GetRandomWord(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__GetRandomWord(soap, _p); } return _p; }

inline struct __ns1__GetRandomWord * soap_new_set___ns1__GetRandomWord(struct soap *soap, _ns1__GetRandomWord *ns1__GetRandomWord) { struct __ns1__GetRandomWord *_p = soap_instantiate___ns1__GetRandomWord(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__GetRandomWord(soap, _p); _p->ns1__GetRandomWord = ns1__GetRandomWord; } return _p; }

inline void soap_delete___ns1__GetRandomWord(struct soap *soap, struct __ns1__GetRandomWord *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__GetRandomWord(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__GetHotEd2ks
#define SOAP_TYPE___ns1__GetHotEd2ks (56)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetHotEd2ks(struct soap*, struct __ns1__GetHotEd2ks *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetHotEd2ks(struct soap*, const struct __ns1__GetHotEd2ks *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetHotEd2ks(struct soap*, const char*, int, const struct __ns1__GetHotEd2ks *, const char*);
SOAP_FMAC3 struct __ns1__GetHotEd2ks * SOAP_FMAC4 soap_in___ns1__GetHotEd2ks(struct soap*, const char*, struct __ns1__GetHotEd2ks *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetHotEd2ks(struct soap*, const struct __ns1__GetHotEd2ks *, const char*, const char*);

#ifndef soap_write___ns1__GetHotEd2ks
#define soap_write___ns1__GetHotEd2ks(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__GetHotEd2ks(soap, data),0) || soap_put___ns1__GetHotEd2ks(soap, data, "-ns1:GetHotEd2ks", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__GetHotEd2ks * SOAP_FMAC4 soap_get___ns1__GetHotEd2ks(struct soap*, struct __ns1__GetHotEd2ks *, const char*, const char*);

#ifndef soap_read___ns1__GetHotEd2ks
#define soap_read___ns1__GetHotEd2ks(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__GetHotEd2ks(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__GetHotEd2ks * SOAP_FMAC2 soap_instantiate___ns1__GetHotEd2ks(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetHotEd2ks * soap_new___ns1__GetHotEd2ks(struct soap *soap, int n = -1) { return soap_instantiate___ns1__GetHotEd2ks(soap, n, NULL, NULL, NULL); }

inline struct __ns1__GetHotEd2ks * soap_new_req___ns1__GetHotEd2ks(struct soap *soap) { struct __ns1__GetHotEd2ks *_p = soap_instantiate___ns1__GetHotEd2ks(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__GetHotEd2ks(soap, _p); } return _p; }

inline struct __ns1__GetHotEd2ks * soap_new_set___ns1__GetHotEd2ks(struct soap *soap, _ns1__GetHotEd2ks *ns1__GetHotEd2ks) { struct __ns1__GetHotEd2ks *_p = soap_instantiate___ns1__GetHotEd2ks(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__GetHotEd2ks(soap, _p); _p->ns1__GetHotEd2ks = ns1__GetHotEd2ks; } return _p; }

inline void soap_delete___ns1__GetHotEd2ks(struct soap *soap, struct __ns1__GetHotEd2ks *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__GetHotEd2ks(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__GetHotWords
#define SOAP_TYPE___ns1__GetHotWords (52)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetHotWords(struct soap*, struct __ns1__GetHotWords *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetHotWords(struct soap*, const struct __ns1__GetHotWords *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetHotWords(struct soap*, const char*, int, const struct __ns1__GetHotWords *, const char*);
SOAP_FMAC3 struct __ns1__GetHotWords * SOAP_FMAC4 soap_in___ns1__GetHotWords(struct soap*, const char*, struct __ns1__GetHotWords *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetHotWords(struct soap*, const struct __ns1__GetHotWords *, const char*, const char*);

#ifndef soap_write___ns1__GetHotWords
#define soap_write___ns1__GetHotWords(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__GetHotWords(soap, data),0) || soap_put___ns1__GetHotWords(soap, data, "-ns1:GetHotWords", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__GetHotWords * SOAP_FMAC4 soap_get___ns1__GetHotWords(struct soap*, struct __ns1__GetHotWords *, const char*, const char*);

#ifndef soap_read___ns1__GetHotWords
#define soap_read___ns1__GetHotWords(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__GetHotWords(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__GetHotWords * SOAP_FMAC2 soap_instantiate___ns1__GetHotWords(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetHotWords * soap_new___ns1__GetHotWords(struct soap *soap, int n = -1) { return soap_instantiate___ns1__GetHotWords(soap, n, NULL, NULL, NULL); }

inline struct __ns1__GetHotWords * soap_new_req___ns1__GetHotWords(struct soap *soap) { struct __ns1__GetHotWords *_p = soap_instantiate___ns1__GetHotWords(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__GetHotWords(soap, _p); } return _p; }

inline struct __ns1__GetHotWords * soap_new_set___ns1__GetHotWords(struct soap *soap, _ns1__GetHotWords *ns1__GetHotWords) { struct __ns1__GetHotWords *_p = soap_instantiate___ns1__GetHotWords(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__GetHotWords(soap, _p); _p->ns1__GetHotWords = ns1__GetHotWords; } return _p; }

inline void soap_delete___ns1__GetHotWords(struct soap *soap, struct __ns1__GetHotWords *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__GetHotWords(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__GetSensitiveWords
#define SOAP_TYPE___ns1__GetSensitiveWords (48)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetSensitiveWords(struct soap*, struct __ns1__GetSensitiveWords *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetSensitiveWords(struct soap*, const struct __ns1__GetSensitiveWords *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetSensitiveWords(struct soap*, const char*, int, const struct __ns1__GetSensitiveWords *, const char*);
SOAP_FMAC3 struct __ns1__GetSensitiveWords * SOAP_FMAC4 soap_in___ns1__GetSensitiveWords(struct soap*, const char*, struct __ns1__GetSensitiveWords *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetSensitiveWords(struct soap*, const struct __ns1__GetSensitiveWords *, const char*, const char*);

#ifndef soap_write___ns1__GetSensitiveWords
#define soap_write___ns1__GetSensitiveWords(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__GetSensitiveWords(soap, data),0) || soap_put___ns1__GetSensitiveWords(soap, data, "-ns1:GetSensitiveWords", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__GetSensitiveWords * SOAP_FMAC4 soap_get___ns1__GetSensitiveWords(struct soap*, struct __ns1__GetSensitiveWords *, const char*, const char*);

#ifndef soap_read___ns1__GetSensitiveWords
#define soap_read___ns1__GetSensitiveWords(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__GetSensitiveWords(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__GetSensitiveWords * SOAP_FMAC2 soap_instantiate___ns1__GetSensitiveWords(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetSensitiveWords * soap_new___ns1__GetSensitiveWords(struct soap *soap, int n = -1) { return soap_instantiate___ns1__GetSensitiveWords(soap, n, NULL, NULL, NULL); }

inline struct __ns1__GetSensitiveWords * soap_new_req___ns1__GetSensitiveWords(struct soap *soap) { struct __ns1__GetSensitiveWords *_p = soap_instantiate___ns1__GetSensitiveWords(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__GetSensitiveWords(soap, _p); } return _p; }

inline struct __ns1__GetSensitiveWords * soap_new_set___ns1__GetSensitiveWords(struct soap *soap, _ns1__GetSensitiveWords *ns1__GetSensitiveWords) { struct __ns1__GetSensitiveWords *_p = soap_instantiate___ns1__GetSensitiveWords(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__GetSensitiveWords(soap, _p); _p->ns1__GetSensitiveWords = ns1__GetSensitiveWords; } return _p; }

inline void soap_delete___ns1__GetSensitiveWords(struct soap *soap, struct __ns1__GetSensitiveWords *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__GetSensitiveWords(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__GetUserSetting
#define SOAP_TYPE___ns1__GetUserSetting (44)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetUserSetting(struct soap*, struct __ns1__GetUserSetting *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetUserSetting(struct soap*, const struct __ns1__GetUserSetting *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetUserSetting(struct soap*, const char*, int, const struct __ns1__GetUserSetting *, const char*);
SOAP_FMAC3 struct __ns1__GetUserSetting * SOAP_FMAC4 soap_in___ns1__GetUserSetting(struct soap*, const char*, struct __ns1__GetUserSetting *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetUserSetting(struct soap*, const struct __ns1__GetUserSetting *, const char*, const char*);

#ifndef soap_write___ns1__GetUserSetting
#define soap_write___ns1__GetUserSetting(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__GetUserSetting(soap, data),0) || soap_put___ns1__GetUserSetting(soap, data, "-ns1:GetUserSetting", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__GetUserSetting * SOAP_FMAC4 soap_get___ns1__GetUserSetting(struct soap*, struct __ns1__GetUserSetting *, const char*, const char*);

#ifndef soap_read___ns1__GetUserSetting
#define soap_read___ns1__GetUserSetting(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__GetUserSetting(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__GetUserSetting * SOAP_FMAC2 soap_instantiate___ns1__GetUserSetting(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetUserSetting * soap_new___ns1__GetUserSetting(struct soap *soap, int n = -1) { return soap_instantiate___ns1__GetUserSetting(soap, n, NULL, NULL, NULL); }

inline struct __ns1__GetUserSetting * soap_new_req___ns1__GetUserSetting(struct soap *soap) { struct __ns1__GetUserSetting *_p = soap_instantiate___ns1__GetUserSetting(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__GetUserSetting(soap, _p); } return _p; }

inline struct __ns1__GetUserSetting * soap_new_set___ns1__GetUserSetting(struct soap *soap, _ns1__GetUserSetting *ns1__GetUserSetting) { struct __ns1__GetUserSetting *_p = soap_instantiate___ns1__GetUserSetting(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__GetUserSetting(soap, _p); _p->ns1__GetUserSetting = ns1__GetUserSetting; } return _p; }

inline void soap_delete___ns1__GetUserSetting(struct soap *soap, struct __ns1__GetUserSetting *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__GetUserSetting(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__GetSystemMessage
#define SOAP_TYPE___ns1__GetSystemMessage (40)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetSystemMessage(struct soap*, struct __ns1__GetSystemMessage *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetSystemMessage(struct soap*, const struct __ns1__GetSystemMessage *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetSystemMessage(struct soap*, const char*, int, const struct __ns1__GetSystemMessage *, const char*);
SOAP_FMAC3 struct __ns1__GetSystemMessage * SOAP_FMAC4 soap_in___ns1__GetSystemMessage(struct soap*, const char*, struct __ns1__GetSystemMessage *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetSystemMessage(struct soap*, const struct __ns1__GetSystemMessage *, const char*, const char*);

#ifndef soap_write___ns1__GetSystemMessage
#define soap_write___ns1__GetSystemMessage(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__GetSystemMessage(soap, data),0) || soap_put___ns1__GetSystemMessage(soap, data, "-ns1:GetSystemMessage", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__GetSystemMessage * SOAP_FMAC4 soap_get___ns1__GetSystemMessage(struct soap*, struct __ns1__GetSystemMessage *, const char*, const char*);

#ifndef soap_read___ns1__GetSystemMessage
#define soap_read___ns1__GetSystemMessage(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__GetSystemMessage(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__GetSystemMessage * SOAP_FMAC2 soap_instantiate___ns1__GetSystemMessage(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetSystemMessage * soap_new___ns1__GetSystemMessage(struct soap *soap, int n = -1) { return soap_instantiate___ns1__GetSystemMessage(soap, n, NULL, NULL, NULL); }

inline struct __ns1__GetSystemMessage * soap_new_req___ns1__GetSystemMessage(struct soap *soap) { struct __ns1__GetSystemMessage *_p = soap_instantiate___ns1__GetSystemMessage(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__GetSystemMessage(soap, _p); } return _p; }

inline struct __ns1__GetSystemMessage * soap_new_set___ns1__GetSystemMessage(struct soap *soap, _ns1__GetSystemMessage *ns1__GetSystemMessage) { struct __ns1__GetSystemMessage *_p = soap_instantiate___ns1__GetSystemMessage(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__GetSystemMessage(soap, _p); _p->ns1__GetSystemMessage = ns1__GetSystemMessage; } return _p; }

inline void soap_delete___ns1__GetSystemMessage(struct soap *soap, struct __ns1__GetSystemMessage *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__GetSystemMessage(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__GetSystemNotify
#define SOAP_TYPE___ns1__GetSystemNotify (36)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetSystemNotify(struct soap*, struct __ns1__GetSystemNotify *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetSystemNotify(struct soap*, const struct __ns1__GetSystemNotify *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetSystemNotify(struct soap*, const char*, int, const struct __ns1__GetSystemNotify *, const char*);
SOAP_FMAC3 struct __ns1__GetSystemNotify * SOAP_FMAC4 soap_in___ns1__GetSystemNotify(struct soap*, const char*, struct __ns1__GetSystemNotify *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetSystemNotify(struct soap*, const struct __ns1__GetSystemNotify *, const char*, const char*);

#ifndef soap_write___ns1__GetSystemNotify
#define soap_write___ns1__GetSystemNotify(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__GetSystemNotify(soap, data),0) || soap_put___ns1__GetSystemNotify(soap, data, "-ns1:GetSystemNotify", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__GetSystemNotify * SOAP_FMAC4 soap_get___ns1__GetSystemNotify(struct soap*, struct __ns1__GetSystemNotify *, const char*, const char*);

#ifndef soap_read___ns1__GetSystemNotify
#define soap_read___ns1__GetSystemNotify(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__GetSystemNotify(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__GetSystemNotify * SOAP_FMAC2 soap_instantiate___ns1__GetSystemNotify(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetSystemNotify * soap_new___ns1__GetSystemNotify(struct soap *soap, int n = -1) { return soap_instantiate___ns1__GetSystemNotify(soap, n, NULL, NULL, NULL); }

inline struct __ns1__GetSystemNotify * soap_new_req___ns1__GetSystemNotify(struct soap *soap) { struct __ns1__GetSystemNotify *_p = soap_instantiate___ns1__GetSystemNotify(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__GetSystemNotify(soap, _p); } return _p; }

inline struct __ns1__GetSystemNotify * soap_new_set___ns1__GetSystemNotify(struct soap *soap, _ns1__GetSystemNotify *ns1__GetSystemNotify) { struct __ns1__GetSystemNotify *_p = soap_instantiate___ns1__GetSystemNotify(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__GetSystemNotify(soap, _p); _p->ns1__GetSystemNotify = ns1__GetSystemNotify; } return _p; }

inline void soap_delete___ns1__GetSystemNotify(struct soap *soap, struct __ns1__GetSystemNotify *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__GetSystemNotify(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Reason
#define SOAP_TYPE_PointerToSOAP_ENV__Reason (102)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Reason(struct soap*, const char *, int, struct SOAP_ENV__Reason *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Reason
#define soap_write_PointerToSOAP_ENV__Reason(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Reason(soap, data),0) || soap_put_PointerToSOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Reason
#define soap_read_PointerToSOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Detail
#define SOAP_TYPE_PointerToSOAP_ENV__Detail (101)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Detail(struct soap*, const char *, int, struct SOAP_ENV__Detail *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Detail
#define soap_write_PointerToSOAP_ENV__Detail(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Detail(soap, data),0) || soap_put_PointerToSOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Detail
#define soap_read_PointerToSOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Code
#define SOAP_TYPE_PointerToSOAP_ENV__Code (95)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Code(struct soap*, const char *, int, struct SOAP_ENV__Code *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Code
#define soap_write_PointerToSOAP_ENV__Code(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Code(soap, data),0) || soap_put_PointerToSOAP_ENV__Code(soap, data, "SOAP-ENV:Code", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Code
#define soap_read_PointerToSOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef SOAP_TYPE_PointerTo_ns1__SetPlayLogResponse
#define SOAP_TYPE_PointerTo_ns1__SetPlayLogResponse (70)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__SetPlayLogResponse(struct soap*, _ns1__SetPlayLogResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__SetPlayLogResponse(struct soap*, const char *, int, _ns1__SetPlayLogResponse *const*, const char *);
SOAP_FMAC3 _ns1__SetPlayLogResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__SetPlayLogResponse(struct soap*, const char*, _ns1__SetPlayLogResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__SetPlayLogResponse(struct soap*, _ns1__SetPlayLogResponse *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__SetPlayLogResponse
#define soap_write_PointerTo_ns1__SetPlayLogResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__SetPlayLogResponse(soap, data),0) || soap_put_PointerTo_ns1__SetPlayLogResponse(soap, data, "ns1:SetPlayLogResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__SetPlayLogResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__SetPlayLogResponse(struct soap*, _ns1__SetPlayLogResponse **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__SetPlayLogResponse
#define soap_read_PointerTo_ns1__SetPlayLogResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__SetPlayLogResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__SetPlayLog
#define SOAP_TYPE_PointerTo_ns1__SetPlayLog (69)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__SetPlayLog(struct soap*, _ns1__SetPlayLog *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__SetPlayLog(struct soap*, const char *, int, _ns1__SetPlayLog *const*, const char *);
SOAP_FMAC3 _ns1__SetPlayLog ** SOAP_FMAC4 soap_in_PointerTo_ns1__SetPlayLog(struct soap*, const char*, _ns1__SetPlayLog **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__SetPlayLog(struct soap*, _ns1__SetPlayLog *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__SetPlayLog
#define soap_write_PointerTo_ns1__SetPlayLog(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__SetPlayLog(soap, data),0) || soap_put_PointerTo_ns1__SetPlayLog(soap, data, "ns1:SetPlayLog", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__SetPlayLog ** SOAP_FMAC4 soap_get_PointerTo_ns1__SetPlayLog(struct soap*, _ns1__SetPlayLog **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__SetPlayLog
#define soap_read_PointerTo_ns1__SetPlayLog(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__SetPlayLog(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__SetFeedbackResponse
#define SOAP_TYPE_PointerTo_ns1__SetFeedbackResponse (66)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__SetFeedbackResponse(struct soap*, _ns1__SetFeedbackResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__SetFeedbackResponse(struct soap*, const char *, int, _ns1__SetFeedbackResponse *const*, const char *);
SOAP_FMAC3 _ns1__SetFeedbackResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__SetFeedbackResponse(struct soap*, const char*, _ns1__SetFeedbackResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__SetFeedbackResponse(struct soap*, _ns1__SetFeedbackResponse *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__SetFeedbackResponse
#define soap_write_PointerTo_ns1__SetFeedbackResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__SetFeedbackResponse(soap, data),0) || soap_put_PointerTo_ns1__SetFeedbackResponse(soap, data, "ns1:SetFeedbackResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__SetFeedbackResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__SetFeedbackResponse(struct soap*, _ns1__SetFeedbackResponse **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__SetFeedbackResponse
#define soap_read_PointerTo_ns1__SetFeedbackResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__SetFeedbackResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__SetFeedback
#define SOAP_TYPE_PointerTo_ns1__SetFeedback (65)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__SetFeedback(struct soap*, _ns1__SetFeedback *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__SetFeedback(struct soap*, const char *, int, _ns1__SetFeedback *const*, const char *);
SOAP_FMAC3 _ns1__SetFeedback ** SOAP_FMAC4 soap_in_PointerTo_ns1__SetFeedback(struct soap*, const char*, _ns1__SetFeedback **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__SetFeedback(struct soap*, _ns1__SetFeedback *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__SetFeedback
#define soap_write_PointerTo_ns1__SetFeedback(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__SetFeedback(soap, data),0) || soap_put_PointerTo_ns1__SetFeedback(soap, data, "ns1:SetFeedback", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__SetFeedback ** SOAP_FMAC4 soap_get_PointerTo_ns1__SetFeedback(struct soap*, _ns1__SetFeedback **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__SetFeedback
#define soap_read_PointerTo_ns1__SetFeedback(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__SetFeedback(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__SetSearchLogResponse
#define SOAP_TYPE_PointerTo_ns1__SetSearchLogResponse (62)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__SetSearchLogResponse(struct soap*, _ns1__SetSearchLogResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__SetSearchLogResponse(struct soap*, const char *, int, _ns1__SetSearchLogResponse *const*, const char *);
SOAP_FMAC3 _ns1__SetSearchLogResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__SetSearchLogResponse(struct soap*, const char*, _ns1__SetSearchLogResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__SetSearchLogResponse(struct soap*, _ns1__SetSearchLogResponse *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__SetSearchLogResponse
#define soap_write_PointerTo_ns1__SetSearchLogResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__SetSearchLogResponse(soap, data),0) || soap_put_PointerTo_ns1__SetSearchLogResponse(soap, data, "ns1:SetSearchLogResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__SetSearchLogResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__SetSearchLogResponse(struct soap*, _ns1__SetSearchLogResponse **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__SetSearchLogResponse
#define soap_read_PointerTo_ns1__SetSearchLogResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__SetSearchLogResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__SetSearchLog
#define SOAP_TYPE_PointerTo_ns1__SetSearchLog (61)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__SetSearchLog(struct soap*, _ns1__SetSearchLog *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__SetSearchLog(struct soap*, const char *, int, _ns1__SetSearchLog *const*, const char *);
SOAP_FMAC3 _ns1__SetSearchLog ** SOAP_FMAC4 soap_in_PointerTo_ns1__SetSearchLog(struct soap*, const char*, _ns1__SetSearchLog **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__SetSearchLog(struct soap*, _ns1__SetSearchLog *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__SetSearchLog
#define soap_write_PointerTo_ns1__SetSearchLog(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__SetSearchLog(soap, data),0) || soap_put_PointerTo_ns1__SetSearchLog(soap, data, "ns1:SetSearchLog", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__SetSearchLog ** SOAP_FMAC4 soap_get_PointerTo_ns1__SetSearchLog(struct soap*, _ns1__SetSearchLog **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__SetSearchLog
#define soap_read_PointerTo_ns1__SetSearchLog(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__SetSearchLog(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__GetRandomWordResponse
#define SOAP_TYPE_PointerTo_ns1__GetRandomWordResponse (58)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GetRandomWordResponse(struct soap*, _ns1__GetRandomWordResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GetRandomWordResponse(struct soap*, const char *, int, _ns1__GetRandomWordResponse *const*, const char *);
SOAP_FMAC3 _ns1__GetRandomWordResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__GetRandomWordResponse(struct soap*, const char*, _ns1__GetRandomWordResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GetRandomWordResponse(struct soap*, _ns1__GetRandomWordResponse *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__GetRandomWordResponse
#define soap_write_PointerTo_ns1__GetRandomWordResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__GetRandomWordResponse(soap, data),0) || soap_put_PointerTo_ns1__GetRandomWordResponse(soap, data, "ns1:GetRandomWordResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__GetRandomWordResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__GetRandomWordResponse(struct soap*, _ns1__GetRandomWordResponse **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__GetRandomWordResponse
#define soap_read_PointerTo_ns1__GetRandomWordResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__GetRandomWordResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__GetRandomWord
#define SOAP_TYPE_PointerTo_ns1__GetRandomWord (57)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GetRandomWord(struct soap*, _ns1__GetRandomWord *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GetRandomWord(struct soap*, const char *, int, _ns1__GetRandomWord *const*, const char *);
SOAP_FMAC3 _ns1__GetRandomWord ** SOAP_FMAC4 soap_in_PointerTo_ns1__GetRandomWord(struct soap*, const char*, _ns1__GetRandomWord **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GetRandomWord(struct soap*, _ns1__GetRandomWord *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__GetRandomWord
#define soap_write_PointerTo_ns1__GetRandomWord(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__GetRandomWord(soap, data),0) || soap_put_PointerTo_ns1__GetRandomWord(soap, data, "ns1:GetRandomWord", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__GetRandomWord ** SOAP_FMAC4 soap_get_PointerTo_ns1__GetRandomWord(struct soap*, _ns1__GetRandomWord **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__GetRandomWord
#define soap_read_PointerTo_ns1__GetRandomWord(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__GetRandomWord(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__GetHotEd2ksResponse
#define SOAP_TYPE_PointerTo_ns1__GetHotEd2ksResponse (54)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GetHotEd2ksResponse(struct soap*, _ns1__GetHotEd2ksResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GetHotEd2ksResponse(struct soap*, const char *, int, _ns1__GetHotEd2ksResponse *const*, const char *);
SOAP_FMAC3 _ns1__GetHotEd2ksResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__GetHotEd2ksResponse(struct soap*, const char*, _ns1__GetHotEd2ksResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GetHotEd2ksResponse(struct soap*, _ns1__GetHotEd2ksResponse *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__GetHotEd2ksResponse
#define soap_write_PointerTo_ns1__GetHotEd2ksResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__GetHotEd2ksResponse(soap, data),0) || soap_put_PointerTo_ns1__GetHotEd2ksResponse(soap, data, "ns1:GetHotEd2ksResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__GetHotEd2ksResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__GetHotEd2ksResponse(struct soap*, _ns1__GetHotEd2ksResponse **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__GetHotEd2ksResponse
#define soap_read_PointerTo_ns1__GetHotEd2ksResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__GetHotEd2ksResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__GetHotEd2ks
#define SOAP_TYPE_PointerTo_ns1__GetHotEd2ks (53)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GetHotEd2ks(struct soap*, _ns1__GetHotEd2ks *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GetHotEd2ks(struct soap*, const char *, int, _ns1__GetHotEd2ks *const*, const char *);
SOAP_FMAC3 _ns1__GetHotEd2ks ** SOAP_FMAC4 soap_in_PointerTo_ns1__GetHotEd2ks(struct soap*, const char*, _ns1__GetHotEd2ks **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GetHotEd2ks(struct soap*, _ns1__GetHotEd2ks *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__GetHotEd2ks
#define soap_write_PointerTo_ns1__GetHotEd2ks(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__GetHotEd2ks(soap, data),0) || soap_put_PointerTo_ns1__GetHotEd2ks(soap, data, "ns1:GetHotEd2ks", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__GetHotEd2ks ** SOAP_FMAC4 soap_get_PointerTo_ns1__GetHotEd2ks(struct soap*, _ns1__GetHotEd2ks **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__GetHotEd2ks
#define soap_read_PointerTo_ns1__GetHotEd2ks(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__GetHotEd2ks(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__GetHotWordsResponse
#define SOAP_TYPE_PointerTo_ns1__GetHotWordsResponse (50)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GetHotWordsResponse(struct soap*, _ns1__GetHotWordsResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GetHotWordsResponse(struct soap*, const char *, int, _ns1__GetHotWordsResponse *const*, const char *);
SOAP_FMAC3 _ns1__GetHotWordsResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__GetHotWordsResponse(struct soap*, const char*, _ns1__GetHotWordsResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GetHotWordsResponse(struct soap*, _ns1__GetHotWordsResponse *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__GetHotWordsResponse
#define soap_write_PointerTo_ns1__GetHotWordsResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__GetHotWordsResponse(soap, data),0) || soap_put_PointerTo_ns1__GetHotWordsResponse(soap, data, "ns1:GetHotWordsResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__GetHotWordsResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__GetHotWordsResponse(struct soap*, _ns1__GetHotWordsResponse **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__GetHotWordsResponse
#define soap_read_PointerTo_ns1__GetHotWordsResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__GetHotWordsResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__GetHotWords
#define SOAP_TYPE_PointerTo_ns1__GetHotWords (49)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GetHotWords(struct soap*, _ns1__GetHotWords *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GetHotWords(struct soap*, const char *, int, _ns1__GetHotWords *const*, const char *);
SOAP_FMAC3 _ns1__GetHotWords ** SOAP_FMAC4 soap_in_PointerTo_ns1__GetHotWords(struct soap*, const char*, _ns1__GetHotWords **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GetHotWords(struct soap*, _ns1__GetHotWords *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__GetHotWords
#define soap_write_PointerTo_ns1__GetHotWords(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__GetHotWords(soap, data),0) || soap_put_PointerTo_ns1__GetHotWords(soap, data, "ns1:GetHotWords", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__GetHotWords ** SOAP_FMAC4 soap_get_PointerTo_ns1__GetHotWords(struct soap*, _ns1__GetHotWords **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__GetHotWords
#define soap_read_PointerTo_ns1__GetHotWords(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__GetHotWords(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__GetSensitiveWordsResponse
#define SOAP_TYPE_PointerTo_ns1__GetSensitiveWordsResponse (46)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GetSensitiveWordsResponse(struct soap*, _ns1__GetSensitiveWordsResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GetSensitiveWordsResponse(struct soap*, const char *, int, _ns1__GetSensitiveWordsResponse *const*, const char *);
SOAP_FMAC3 _ns1__GetSensitiveWordsResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__GetSensitiveWordsResponse(struct soap*, const char*, _ns1__GetSensitiveWordsResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GetSensitiveWordsResponse(struct soap*, _ns1__GetSensitiveWordsResponse *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__GetSensitiveWordsResponse
#define soap_write_PointerTo_ns1__GetSensitiveWordsResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__GetSensitiveWordsResponse(soap, data),0) || soap_put_PointerTo_ns1__GetSensitiveWordsResponse(soap, data, "ns1:GetSensitiveWordsResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__GetSensitiveWordsResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__GetSensitiveWordsResponse(struct soap*, _ns1__GetSensitiveWordsResponse **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__GetSensitiveWordsResponse
#define soap_read_PointerTo_ns1__GetSensitiveWordsResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__GetSensitiveWordsResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__GetSensitiveWords
#define SOAP_TYPE_PointerTo_ns1__GetSensitiveWords (45)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GetSensitiveWords(struct soap*, _ns1__GetSensitiveWords *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GetSensitiveWords(struct soap*, const char *, int, _ns1__GetSensitiveWords *const*, const char *);
SOAP_FMAC3 _ns1__GetSensitiveWords ** SOAP_FMAC4 soap_in_PointerTo_ns1__GetSensitiveWords(struct soap*, const char*, _ns1__GetSensitiveWords **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GetSensitiveWords(struct soap*, _ns1__GetSensitiveWords *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__GetSensitiveWords
#define soap_write_PointerTo_ns1__GetSensitiveWords(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__GetSensitiveWords(soap, data),0) || soap_put_PointerTo_ns1__GetSensitiveWords(soap, data, "ns1:GetSensitiveWords", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__GetSensitiveWords ** SOAP_FMAC4 soap_get_PointerTo_ns1__GetSensitiveWords(struct soap*, _ns1__GetSensitiveWords **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__GetSensitiveWords
#define soap_read_PointerTo_ns1__GetSensitiveWords(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__GetSensitiveWords(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__GetUserSettingResponse
#define SOAP_TYPE_PointerTo_ns1__GetUserSettingResponse (42)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GetUserSettingResponse(struct soap*, _ns1__GetUserSettingResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GetUserSettingResponse(struct soap*, const char *, int, _ns1__GetUserSettingResponse *const*, const char *);
SOAP_FMAC3 _ns1__GetUserSettingResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__GetUserSettingResponse(struct soap*, const char*, _ns1__GetUserSettingResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GetUserSettingResponse(struct soap*, _ns1__GetUserSettingResponse *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__GetUserSettingResponse
#define soap_write_PointerTo_ns1__GetUserSettingResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__GetUserSettingResponse(soap, data),0) || soap_put_PointerTo_ns1__GetUserSettingResponse(soap, data, "ns1:GetUserSettingResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__GetUserSettingResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__GetUserSettingResponse(struct soap*, _ns1__GetUserSettingResponse **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__GetUserSettingResponse
#define soap_read_PointerTo_ns1__GetUserSettingResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__GetUserSettingResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__GetUserSetting
#define SOAP_TYPE_PointerTo_ns1__GetUserSetting (41)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GetUserSetting(struct soap*, _ns1__GetUserSetting *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GetUserSetting(struct soap*, const char *, int, _ns1__GetUserSetting *const*, const char *);
SOAP_FMAC3 _ns1__GetUserSetting ** SOAP_FMAC4 soap_in_PointerTo_ns1__GetUserSetting(struct soap*, const char*, _ns1__GetUserSetting **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GetUserSetting(struct soap*, _ns1__GetUserSetting *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__GetUserSetting
#define soap_write_PointerTo_ns1__GetUserSetting(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__GetUserSetting(soap, data),0) || soap_put_PointerTo_ns1__GetUserSetting(soap, data, "ns1:GetUserSetting", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__GetUserSetting ** SOAP_FMAC4 soap_get_PointerTo_ns1__GetUserSetting(struct soap*, _ns1__GetUserSetting **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__GetUserSetting
#define soap_read_PointerTo_ns1__GetUserSetting(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__GetUserSetting(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__GetSystemMessageResponse
#define SOAP_TYPE_PointerTo_ns1__GetSystemMessageResponse (38)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GetSystemMessageResponse(struct soap*, _ns1__GetSystemMessageResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GetSystemMessageResponse(struct soap*, const char *, int, _ns1__GetSystemMessageResponse *const*, const char *);
SOAP_FMAC3 _ns1__GetSystemMessageResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__GetSystemMessageResponse(struct soap*, const char*, _ns1__GetSystemMessageResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GetSystemMessageResponse(struct soap*, _ns1__GetSystemMessageResponse *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__GetSystemMessageResponse
#define soap_write_PointerTo_ns1__GetSystemMessageResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__GetSystemMessageResponse(soap, data),0) || soap_put_PointerTo_ns1__GetSystemMessageResponse(soap, data, "ns1:GetSystemMessageResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__GetSystemMessageResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__GetSystemMessageResponse(struct soap*, _ns1__GetSystemMessageResponse **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__GetSystemMessageResponse
#define soap_read_PointerTo_ns1__GetSystemMessageResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__GetSystemMessageResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__GetSystemMessage
#define SOAP_TYPE_PointerTo_ns1__GetSystemMessage (37)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GetSystemMessage(struct soap*, _ns1__GetSystemMessage *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GetSystemMessage(struct soap*, const char *, int, _ns1__GetSystemMessage *const*, const char *);
SOAP_FMAC3 _ns1__GetSystemMessage ** SOAP_FMAC4 soap_in_PointerTo_ns1__GetSystemMessage(struct soap*, const char*, _ns1__GetSystemMessage **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GetSystemMessage(struct soap*, _ns1__GetSystemMessage *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__GetSystemMessage
#define soap_write_PointerTo_ns1__GetSystemMessage(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__GetSystemMessage(soap, data),0) || soap_put_PointerTo_ns1__GetSystemMessage(soap, data, "ns1:GetSystemMessage", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__GetSystemMessage ** SOAP_FMAC4 soap_get_PointerTo_ns1__GetSystemMessage(struct soap*, _ns1__GetSystemMessage **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__GetSystemMessage
#define soap_read_PointerTo_ns1__GetSystemMessage(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__GetSystemMessage(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__GetSystemNotifyResponse
#define SOAP_TYPE_PointerTo_ns1__GetSystemNotifyResponse (34)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GetSystemNotifyResponse(struct soap*, _ns1__GetSystemNotifyResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GetSystemNotifyResponse(struct soap*, const char *, int, _ns1__GetSystemNotifyResponse *const*, const char *);
SOAP_FMAC3 _ns1__GetSystemNotifyResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__GetSystemNotifyResponse(struct soap*, const char*, _ns1__GetSystemNotifyResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GetSystemNotifyResponse(struct soap*, _ns1__GetSystemNotifyResponse *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__GetSystemNotifyResponse
#define soap_write_PointerTo_ns1__GetSystemNotifyResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__GetSystemNotifyResponse(soap, data),0) || soap_put_PointerTo_ns1__GetSystemNotifyResponse(soap, data, "ns1:GetSystemNotifyResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__GetSystemNotifyResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__GetSystemNotifyResponse(struct soap*, _ns1__GetSystemNotifyResponse **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__GetSystemNotifyResponse
#define soap_read_PointerTo_ns1__GetSystemNotifyResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__GetSystemNotifyResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__GetSystemNotify
#define SOAP_TYPE_PointerTo_ns1__GetSystemNotify (33)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GetSystemNotify(struct soap*, _ns1__GetSystemNotify *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GetSystemNotify(struct soap*, const char *, int, _ns1__GetSystemNotify *const*, const char *);
SOAP_FMAC3 _ns1__GetSystemNotify ** SOAP_FMAC4 soap_in_PointerTo_ns1__GetSystemNotify(struct soap*, const char*, _ns1__GetSystemNotify **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GetSystemNotify(struct soap*, _ns1__GetSystemNotify *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__GetSystemNotify
#define soap_write_PointerTo_ns1__GetSystemNotify(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__GetSystemNotify(soap, data),0) || soap_put_PointerTo_ns1__GetSystemNotify(soap, data, "ns1:GetSystemNotify", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__GetSystemNotify ** SOAP_FMAC4 soap_get_PointerTo_ns1__GetSystemNotify(struct soap*, _ns1__GetSystemNotify **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__GetSystemNotify
#define soap_read_PointerTo_ns1__GetSystemNotify(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__GetSystemNotify(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons1__UserSetting
#define SOAP_TYPE_PointerTons1__UserSetting (32)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__UserSetting(struct soap*, ns1__UserSetting *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__UserSetting(struct soap*, const char *, int, ns1__UserSetting *const*, const char *);
SOAP_FMAC3 ns1__UserSetting ** SOAP_FMAC4 soap_in_PointerTons1__UserSetting(struct soap*, const char*, ns1__UserSetting **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__UserSetting(struct soap*, ns1__UserSetting *const*, const char*, const char*);

#ifndef soap_write_PointerTons1__UserSetting
#define soap_write_PointerTons1__UserSetting(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons1__UserSetting(soap, data),0) || soap_put_PointerTons1__UserSetting(soap, data, "ns1:UserSetting", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__UserSetting ** SOAP_FMAC4 soap_get_PointerTons1__UserSetting(struct soap*, ns1__UserSetting **, const char*, const char*);

#ifndef soap_read_PointerTons1__UserSetting
#define soap_read_PointerTons1__UserSetting(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__UserSetting(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTostd__string
#define SOAP_TYPE_PointerTostd__string (31)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTostd__string(struct soap*, std::string *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTostd__string(struct soap*, const char *, int, std::string *const*, const char *);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_in_PointerTostd__string(struct soap*, const char*, std::string **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTostd__string(struct soap*, std::string *const*, const char*, const char*);

#ifndef soap_write_PointerTostd__string
#define soap_write_PointerTostd__string(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTostd__string(soap, data),0) || soap_put_PointerTostd__string(soap, data, "string", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_get_PointerTostd__string(struct soap*, std::string **, const char*, const char*);

#ifndef soap_read_PointerTostd__string
#define soap_read_PointerTostd__string(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTostd__string(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
#endif

#define soap_default__QName(soap, a) soap_default_string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__QName(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__QName(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in__QName(struct soap*, const char*, char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__QName(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write__QName
#define soap_write__QName(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__QName(soap, data),0) || soap_put__QName(soap, data, "byte", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get__QName(struct soap*, char **, const char*, const char*);

#ifndef soap_read__QName
#define soap_read__QName(soap, data) ( soap_begin_recv(soap) || !soap_get__QName(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_string
#define SOAP_TYPE_string (4)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_string(struct soap*, char **);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_string(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_string(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_string(struct soap*, const char*, char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_string(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write_string
#define soap_write_string(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_string(soap, data),0) || soap_put_string(soap, data, "byte", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_string(struct soap*, char **, const char*, const char*);

#ifndef soap_read_string
#define soap_read_string(soap, data) ( soap_begin_recv(soap) || !soap_get_string(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

/* End of soapH.h */
